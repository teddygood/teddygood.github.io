"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[2993],{3905:(e,a,t)=>{t.d(a,{Zo:()=>k,kt:()=>d});var l=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=l.createContext({}),m=function(e){var a=l.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},k=function(e){var a=m(e.components);return l.createElement(o.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},s=l.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),s=m(t),d=n,N=s["".concat(o,".").concat(d)]||s[d]||u[d]||r;return t?l.createElement(N,i(i({ref:a},k),{},{components:t})):l.createElement(N,i({ref:a},k))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,i=new Array(r);i[0]=s;var p={};for(var o in a)hasOwnProperty.call(a,o)&&(p[o]=a[o]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var m=2;m<r;m++)i[m]=t[m];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}s.displayName="MDXCreateElement"},6790:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var l=t(7462),n=(t(7294),t(3905));const r={title:"Data Engineering \uc2a4\ud130\ub514 13\uc8fc\ucc28",date:"2021-11-17",draft:!1,description:"PseudoLab Data Science Fellowship 1\uae30",sidebar_position:1},i="Introduction to Airflow in Python",p={unversionedId:"Group-Study/data-engineering/data-engineer-with-python-week-13",id:"Group-Study/data-engineering/data-engineer-with-python-week-13",title:"Data Engineering \uc2a4\ud130\ub514 13\uc8fc\ucc28",description:"PseudoLab Data Science Fellowship 1\uae30",source:"@site/docs/Group-Study/data-engineering/data-engineer-with-python-week-13.md",sourceDirName:"Group-Study/data-engineering",slug:"/Group-Study/data-engineering/data-engineer-with-python-week-13",permalink:"/docs/Group-Study/data-engineering/data-engineer-with-python-week-13",draft:!1,editUrl:"https://github.com/teddygood/teddygood.github.io/docs/Group-Study/data-engineering/data-engineer-with-python-week-13.md",tags:[],version:"current",lastUpdatedAt:1671435797,formattedLastUpdatedAt:"2022\ub144 12\uc6d4 19\uc77c",sidebarPosition:1,frontMatter:{title:"Data Engineering \uc2a4\ud130\ub514 13\uc8fc\ucc28",date:"2021-11-17",draft:!1,description:"PseudoLab Data Science Fellowship 1\uae30",sidebar_position:1},sidebar:"sidebar",previous:{title:"Data Engineering \uc2a4\ud130\ub514 12\uc8fc\ucc28",permalink:"/docs/Group-Study/data-engineering/data-engineer-with-python-week-12"},next:{title:"Data Engineering \uc2a4\ud130\ub514 15\uc8fc\ucc28",permalink:"/docs/Group-Study/data-engineering/data-engineer-with-python-week-15"}},o={},m=[{value:"Intro to Airflow",id:"intro-to-airflow",level:2},{value:"Data Engineering",id:"data-engineering",level:3},{value:"workflow",id:"workflow",level:3},{value:"Airflow",id:"airflow",level:3},{value:"Airflow\uc5d0\uc11c workflow \uc2e4\ud589",id:"airflow\uc5d0\uc11c-workflow-\uc2e4\ud589",level:3},{value:"DAG",id:"dag",level:3},{value:"Implementing Airflow DAGs",id:"implementing-airflow-dags",level:2},{value:"Operator",id:"operator",level:3},{value:"BashOperator",id:"bashoperator",level:3},{value:"Operator \ubb38\uc81c\uc810",id:"operator-\ubb38\uc81c\uc810",level:3},{value:"Task",id:"task",level:3},{value:"PythonOperator",id:"pythonoperator",level:3},{value:"EmailOperator",id:"emailoperator",level:3},{value:"DAG Runs",id:"dag-runs",level:3},{value:"Schedule",id:"schedule",level:3},{value:"Maintaining and monitoring Airflow workflows",id:"maintaining-and-monitoring-airflow-workflows",level:2},{value:"Sensor",id:"sensor",level:3},{value:"File Sensor",id:"file-sensor",level:3},{value:"Other sensor",id:"other-sensor",level:3},{value:"sensor\uc640 operator\ub294 \uc5b8\uc81c \uc0ac\uc6a9\ud558\ub294\uac00",id:"sensor\uc640-operator\ub294-\uc5b8\uc81c-\uc0ac\uc6a9\ud558\ub294\uac00",level:3},{value:"Executor",id:"executor",level:3},{value:"SequentialExecutor",id:"sequentialexecutor",level:3},{value:"LocalExecutor",id:"localexecutor",level:3},{value:"CeleryExecutor",id:"celeryexecutor",level:3},{value:"\uc0ac\uc6a9 \uc911\uc778 executor \ud655\uc778",id:"\uc0ac\uc6a9-\uc911\uc778-executor-\ud655\uc778",level:3},{value:"Debugging and troubleshooting in Airflow",id:"debugging-and-troubleshooting-in-airflow",level:3},{value:"SLA and reporting in Airflow",id:"sla-and-reporting-in-airflow",level:3},{value:"Building production pipelines in Airflow",id:"building-production-pipelines-in-airflow",level:2},{value:"Templates",id:"templates",level:3},{value:"Variables",id:"variables",level:3},{value:"Macros",id:"macros",level:3},{value:"Branch",id:"branch",level:3}],k={toc:m};function u(e){let{components:a,...r}=e;return(0,n.kt)("wrapper",(0,l.Z)({},k,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction-to-airflow-in-python"},"Introduction to Airflow in Python"),(0,n.kt)("h2",{id:"intro-to-airflow"},"Intro to Airflow"),(0,n.kt)("h3",{id:"data-engineering"},"Data Engineering"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\ub370\uc774\ud130 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ub370\uc774\ud130\uc640 \uad00\ub828\ub41c \ubaa8\ub4e0 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uace0 \uc2e0\ub8b0\ud560 \uc218 \uc788\uace0 \ubc18\ubcf5 \uac00\ub2a5\ud558\uba70 \uc720\uc9c0\uad00\ub9ac \uac00\ub2a5\ud55c \ud504\ub85c\uc138\uc2a4\ub97c \ub9cc\ub4dc\ub294 \uac83")))),(0,n.kt)("h3",{id:"workflow"},"workflow"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"workflow ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ub370\uc774\ud130 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uae30 \uc704\ud55c \ub2e8\uacc4"),(0,n.kt)("li",{parentName:"ul"},"\uc0ac\uc6a9\uc790\uc758 \ud544\uc694\uc5d0 \ub530\ub77c \ub2e4\ub974\uac8c \ub2e4\uc591\ud55c \uc218\uc900\uc758 \ubcf5\uc7a1\uc131\uc744 \uac00\uc9d0"))),(0,n.kt)("li",{parentName:"ul"},"workflow tool",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Airbnb\uc5d0\uc11c \uc2dc\uc791\ud55c Apache Airflow"),(0,n.kt)("li",{parentName:"ul"},"Spotify\uc758 Luigi"),(0,n.kt)("li",{parentName:"ul"},"Microsoft\uc758 SSIS"),(0,n.kt)("li",{parentName:"ul"},"Bash Script")))),(0,n.kt)("h3",{id:"airflow"},"Airflow"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Airflow",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"workflow\uc758 \uc0dd\uc131, \uc2a4\ucf00\uc974\ub9c1(scheduling), \ubaa8\ub2c8\ud130\ub9c1(monitoring)\uc744 \ud3ec\ud568\ud558\uc5ec \ubcf5\uc7a1\ud55c workflow\ub97c \ud504\ub85c\uadf8\ub798\ubc0d\ud560 \uc218 \uc788\ub294 \ud50c\ub7ab\ud3fc"),(0,n.kt)("li",{parentName:"ul"},"\ub2e4\uc591\ud55c \ub3c4\uad6c\uc640 \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc \uc2e4\uc81c workflow\ub294 Python\uc73c\ub85c \uc791\uc131\ub428"),(0,n.kt)("li",{parentName:"ul"},"workflow\ub97c DAG(Directed Acyclic Graph)\uc73c\ub85c \uad6c\ud604\ud568"),(0,n.kt)("li",{parentName:"ul"},"\ucf54\ub4dc, command-line, built-in web interface\uc73c\ub85c \uc5d1\uc138\uc2a4 \uac00\ub2a5"),(0,n.kt)("li",{parentName:"ul"},"web interface\ub97c \uc81c\uacf5",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Graph View, Tree View \ub4f1 DAG\uc5d0 \ub300\ud574 \ub2e4\uc591\ud558\uac8c \ud655\uc778\ud560 \uc218 \uc788\uc74c"),(0,n.kt)("li",{parentName:"ul"},"Code \uae30\ub2a5\uc740 \ub9d0 \uadf8\ub300\ub85c \ucf54\ub4dc\ub97c \ubcf4\ub294 \uae30\ub2a5\uc774\uba70 \uc77d\uae30 \uc804\uc6a9\uc784",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ubaa8\ub4e0 DAG \ucf54\ub4dc\uc758 \ubcc0\uacbd\uc740 DAG \uc2a4\ud06c\ub9bd\ud2b8\ub97c \ud1b5\ud574 \uc218\ud589\ud574\uc57c \ud568"))),(0,n.kt)("li",{parentName:"ul"},"Log \ud398\uc774\uc9c0\uc5d0\uc11c\ub294 \uc6f9 \uc11c\ubc84 \uc2dc\uc791, \uadf8\ub798\ud504 \ub610\ub294 \ud2b8\ub9ac \ub178\ub4dc \ubcf4\uae30, \uc0ac\uc6a9\uc790 \ub9cc\ub4e4\uae30, DAG \uc2dc\uc791 \ub4f1\uacfc \uac19\uc740 \ud56d\ubaa9\uc774 \ud3ec\ud568\ub428"),(0,n.kt)("li",{parentName:"ul"},"\uc0ac\uc6a9\ud558\uae30 \uc26c\uc6c0"))),(0,n.kt)("li",{parentName:"ul"},"command line\ub85c \uc0ac\uc6a9\ud558\uba74 SSH \ub4f1\uc744 \ud1b5\ud574 \uc5d1\uc138\uc2a4\uac00 \ub354 \uac04\ub2e8\ud560 \uc218 \uc788\uc74c")))),(0,n.kt)("h3",{id:"airflow\uc5d0\uc11c-workflow-\uc2e4\ud589"},"Airflow\uc5d0\uc11c workflow \uc2e4\ud589"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"airflow run <dag_id> <task_id> <start_date>\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"airflow run example-etl download-file 2020-01-10\n")),(0,n.kt)("h3",{id:"dag"},"DAG"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"DAG(Directed Acyclic Graph)"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Airflow\uc5d0\uc11c workflow\ub97c \uad6c\uc131\ud558\ub294 \uc791\uc5c5 \uc9d1\ud569"),(0,n.kt)("li",{parentName:"ul"},"\uc791\uc5c5 \uac04 \uc758\uc874\uc131\uc73c\ub85c \uad6c\uc131\ub428"),(0,n.kt)("li",{parentName:"ul"},"DAG\uc5d0 \ub300\ud55c \ub2e4\uc591\ud55c \uc138\ubd80 \uc815\ubcf4\ub85c \uc0dd\uc131\ub428",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc774\ub984, \uc2dc\uc791\uc77c, \uc18c\uc720\uc790, \uc774\uba54\uc77c \ub4f1"))),(0,n.kt)("li",{parentName:"ul"},"\ubaa8\ub4e0 \uc758\uc874\uc131\uc774 \uc644\uc804\ud788 \uacc4\uc0b0\ub418\uc9c0 \uc54a\uc740 \uc0c1\ud0dc\uc5d0\uc11c \uc77c\ubd80 \uc791\uc5c5\uc774 \uc2dc\uc791\ud558\uc9c0 \uc54a\ub3c4\ub85d \ubc29\uc9c0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc774\uc804 \uc791\uc5c5\uc774 \ub05d\ub098\uc9c0 \uc54a\uc73c\uba74 \ub2e4\uc74c \uc791\uc5c5 \uc2e4\ud589 X"))),(0,n.kt)("li",{parentName:"ul"},"Directed(\ubc29\ud5a5\uc131)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"task\uc758 \uc758\uc874\uc131\uc5d0 \ub530\ub77c \uc2e4\ud589 \uacbd\ub85c\uac00 \uc815\uc758\uac00 \ub418\uba70 \ud750\ub984\uc774 \uc788\ub2e4\ub294 \uc758\ubbf8"))),(0,n.kt)("li",{parentName:"ul"},"Acyclic(\ube44\uc21c\ud658\uc131)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uadf8\ub798\ud504\uac00 \uc774\uc804\uc5d0 \uc644\ub8cc\ub41c task\uc5d0 \uc5f0\uacb0\ub418\uc9c0 \uc54a\uc544\uc57c \ud55c\ub2e4\ub294 \uc758\ubbf8",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud30c\uc774\ud504\ub77c\uc778\uc774 \ub05d\uc5c6\uc774 \uc2e4\ud589\ub420 \uc218 \uc788\uc74c -> \uc6cc\ud06c\ud50c\ub85c\uac00 \uc644\ub8cc\ub418\uc9c0 \uc54a\uc74c"))))),(0,n.kt)("li",{parentName:"ul"},"Airflow \ub0b4\uc5d0\uc11c DAG\ub294 \ud30c\uc774\uc36c\uc73c\ub85c \uc791\uc131\ub418\uc9c0\ub9cc \ub2e4\ub978 \uc5b8\uc5b4\ub098 \uae30\uc220\ub85c \uc791\uc131\ub41c \uac83\ub3c4 \uc0ac\uc6a9 \uac00\ub2a5",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"e.g. Bash script, Apache Spark "))),(0,n.kt)("li",{parentName:"ul"},"task: operator, sensor \ub4f1\uacfc \uac19\uc774 \uc2e4\ud589\ub420 \uac83"),(0,n.kt)("li",{parentName:"ul"},"\uba85\uc2dc\uc801 \ub610\ub294 \uc554\ubb35\uc801\uc73c\ub85c \uc815\uc758\ub41c \uc758\uc874\uc131\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc74c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc758\uc874\uc131\uc740 \uc2e4\ud589 \uc21c\uc11c\ub97c \uc815\uc758\ud558\uae30\uc5d0 Airflow\uac00 \uc6cc\ud06c\ud50c\ub85c\uc758 \uc5b4\ub290 \uc9c0\uc810\uc5d0\uc11c \uc5b4\ub5a4 \uc694\uc18c\ub97c \uc2e4\ud589\ud574\uc57c \ud558\ub294\uc9c0 \uc54c \uc218 \uc788\uc74c"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"DAG \uc815\uc758"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from airflow.models import DAG\nfrom datetime import datetime\n\ndefault_arguments = {\n    'owner': 'jdoe',\n    'email': 'jdoe@datacamp.com',\n    'start_date': datetime(2020, 1, 20)\n}\n\netl_dag = DAG( 'etl_workflow', default_args=default_arguments ) # \uc2e4\uc81c\ub85c Airflow \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud45c\uc2dc\ub418\uc9c0 \uc54a\uc74c\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"airflow \uba85\ub839\uc5b4 command-line\uc5d0\uc11c \uc0ac\uc6a9 "),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"airflow\uc758 subcommand \uc124\uba85\uc744 \ubcf4\uace0 \uc2f6\ub2e4\uba74 ",(0,n.kt)("inlineCode",{parentName:"li"},"airflow -h")," \uc0ac\uc6a9 "),(0,n.kt)("li",{parentName:"ul"},"\ub9ce\uc740 subcommand\ub294 DAG\uc640 \uad00\ub828 \uc788\uc74c"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"arflow list_dags"),"\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc778\uc2dd\ub41c \ubaa8\ub4e0 DAG \ud655\uc778 \uac00\ub2a5 "))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"command line"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Airflow \ud504\ub85c\uc138\uc2a4(i.e. \uc6f9 \uc11c\ubc84 \ub610\ub294 scheduler)\ub97c \uc2dc\uc791\ud558\ub294 \ub370 \uc0ac\uc6a9 "),(0,n.kt)("li",{parentName:"ul"},"DAG\ub098 task\ub97c \uc218\ub3d9\uc73c\ub85c \uc2e4\ud589\ud558\uace0 \ub85c\uadf8\ub97c \uac80\ud1a0\ud558\ub294 \ub370 \uc0ac\uc6a9"),(0,n.kt)("li",{parentName:"ul"},"command-line\uc5d0\uc11c \ud2b9\uc815 task \uc2e4\ud589",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"airflow run <dag_id> <task_id> <date>\n"))),(0,n.kt)("li",{parentName:"ul"},"\uc804\uccb4 DAG \uc2e4\ud589",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"airflow trigger_dag -e <date> <dag_id>\n"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Python"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"DAG \uc0dd\uc131\uacfc \ud3b8\uc9d1\uc5d0 \uc0ac\uc6a9")))),(0,n.kt)("h2",{id:"implementing-airflow-dags"},"Implementing Airflow DAGs"),(0,n.kt)("h3",{id:"operator"},"Operator"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"operator",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"workflow\uc5d0\uc11c single task"),(0,n.kt)("li",{parentName:"ul"},"\ub3c5\ub9bd\uc801\uc73c\ub85c \uc2e4\ud589",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc791\uc5c5\uc744 \uc644\ub8cc\ud558\ub294 \ub370 \ud544\uc694\ud55c \ub9ac\uc18c\uc2a4\ub294 operator \ub0b4\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\uc74c"))),(0,n.kt)("li",{parentName:"ul"},"operator\ub294 \uc11c\ub85c \uc815\ubcf4\ub97c \uacf5\uc720\ud558\uc9c0 \uc54a\uc74c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"workflow\ub97c \ub2e8\uc21c\ud654\ud558\uace0 airflow\uac00 \uac00\uc7a5 \ud6a8\uc728\uc801\uc778 \ubc29\uc2dd\uc73c\ub85c \uc791\uc5c5\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uae30 \uc704\ud568"),(0,n.kt)("li",{parentName:"ul"},"\uc815\ubcf4\ub97c \uacf5\uc720\ud560 \uc218 \uc788\uc9c0\ub9cc \uc9c0\uae08 \uacfc\uc815\uc5d0\uc11c\ub294 \uc0dd\ub7b5"))),(0,n.kt)("li",{parentName:"ul"},"Airflow\uc5d0\ub294 \ub2e4\uc591\ud55c \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ub2e4\uc591\ud55c \uc5f0\uc0b0\uc790 \ud3ec\ud568",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc8fc\uc694\ud55c operator\ub294 ",(0,n.kt)("inlineCode",{parentName:"li"},"airflow.operators")," \ub610\ub294 ",(0,n.kt)("inlineCode",{parentName:"li"},"airflow.contrib.operators")," \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0 \uc788\uc74c")))))),(0,n.kt)("h3",{id:"bashoperator"},"BashOperator"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\uc8fc\uc5b4\uc9c4 Bash command \ub610\ub294 script\ub97c \uc2e4\ud589"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"task_id"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"bash_command"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"dag")," \uc778\uc218\ub97c \uac00\uc9d0"),(0,n.kt)("li",{parentName:"ul"},"\ub098\uc911\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc815\ub9ac\ub418\ub294 \uc784\uc2dc \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c \uba85\ub839 \uc2e4\ud589"),(0,n.kt)("li",{parentName:"ul"},"\ub85c\uceec \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \uac83\ucc98\ub7fc \ud658\uacbd \ubcc0\uc218\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc74c"),(0,n.kt)("li",{parentName:"ul"},"example",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from airflow.operators.bash_operator import BashOperator\nexample_task = BashOperator(\n    task_id='bash_ex',\n    bash_command='echo 1',\n    dag=dag)\n")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"bash_task = BashOperator(\n    task_id='clean_addresses',\n    bash_command='cat addresses.txt | awk \"NF==10\" > cleaned.txt',\n    dag=dag)\n")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"BashOperator(\n    task_id='bash_example',\n    bash_command='echo \"Example!\"',\n    dag=ml_dag)\n")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"BashOperator(\n    task_id='bash_script_example',\n    bash_command='runcleanup.sh',\n    dag=ml_dag)\n")))),(0,n.kt)("h3",{id:"operator-\ubb38\uc81c\uc810"},"Operator \ubb38\uc81c\uc810"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\uac01\uac01\uc758 operator\ub4e4\uc774 \uac19\uc740 \uc7a5\uc18c \ub610\ub294 \ud658\uacbd\uc5d0\uc11c \uc2e4\ud589\ub41c\ub2e4\ub294 \ubcf4\uc7a5\uc774 \uc5c6\uc74c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ud55c \uc5f0\uc0b0\uc790\uac00 \ud2b9\uc815 \uc124\uc815\uc73c\ub85c \uc8fc\uc5b4\uc9c4 \ub514\ub809\ud1a0\ub9ac\uc5d0\uc11c \uc2e4\ud589\ub418\uc5c8\uae30 \ub54c\ubb38\uc5d0 \ub2e4\uc74c \uc5f0\uc0b0\uc790\uac00 \ubc18\ub4dc\uc2dc \ub3d9\uc77c\ud55c \uc815\ubcf4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub294 \uac83\uc740 \uc544\ub2d8 -> \ud544\uc694\ud55c \uacbd\uc6b0 \uba85\uc2dc\uc801\uc73c\ub85c \uc124\uc815"))),(0,n.kt)("li",{parentName:"ul"},"BashOperator\uc5d0 \ub300\ud55c \ud658\uacbd \ubcc0\uc218\ub97c \uc124\uc815\ud574\uc57c \ud560 \uc218 \uc788\uc74c"),(0,n.kt)("li",{parentName:"ul"},"\ub192\uc740 \uad8c\ud55c\uc73c\ub85c task\ub97c \uc2e4\ud589\ud558\ub294 \uac83\uc774 \uae4c\ub2e4\ub85c\uc6b8 \uc218 \uc788\uc74c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc811\uadfc\uc774 task\ub97c \uc2e4\ud589\ud558\ub294 \ud2b9\uc815 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud574 \uc124\uc815\ub418\uc5b4\uc57c \ud568"),(0,n.kt)("li",{parentName:"ul"},"\ub192\uc740 \uad8c\ud55c\uc740 \uc2dc\uc2a4\ud15c\uc5d0\uc11c root \ub610\ub294 administrator\ub97c \uc758\ubbf8")))),(0,n.kt)("h3",{id:"task"},"Task"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"task"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc778\uc2a4\ud134\uc2a4\ud654 \ub41c \uc5f0\uc0b0\uc790"),(0,n.kt)("li",{parentName:"ul"},"\uc77c\ubc18\uc801\uc73c\ub85c Python \ubcc0\uc218\uc5d0 \ud560\ub2f9"),(0,n.kt)("li",{parentName:"ul"},"Airflow tool \ub0b4\uc5d0\uc11c task\ub294 \ubcc0\uc218 \uc774\ub984\uc774 \uc544\ub2cc task_id\ub85c \ucc38\uc870\ub428"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"task dependency"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\uc791\uc5c5 \uc644\ub8cc \uc21c\uc11c\ub97c \uc815\uc758")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\ud544\uc218\ub294 \uc544\ub2c8\uc9c0\ub9cc \uc77c\ubc18\uc801\uc73c\ub85c task dependency\uac00 \uc788\uc74c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"task dependency\uac00 \uc815\uc758\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc791\uc5c5 \uc2e4\ud589\uc740 \uc21c\uc11c \ubcf4\uc7a5\uc5c6\uc774 Airflow \uc790\uccb4\uc5d0\uc11c \ucc98\ub9ac\ub428")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"task dependency\ub97c uptream task \ub610\ub294 downstream task\ub85c \ub098\ub268"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"upstream task\ub294 downstream task \uc804\uc5d0 \uc644\ub8cc\ud574\uc57c \ud568"),(0,n.kt)("li",{parentName:"ul"},"uptream\uc740 \uc774\uc804, downstream\uc740 \uc774\ud6c4\ub97c \uc758\ubbf8"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Airflow 1.8 \uc774\ud6c4 task dependency\ub294 bitshift operator\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ub428"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},">>"),": upstream operator"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<<"),": downstream operator"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"example\n",(0,n.kt)("img",{alt:"\uc804",src:t(5984).Z,width:"798",height:"481"}),"  "),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"# Define the tasks\ntask1 = BashOperator(\n            task_id='first_task',\n            bash_command='echo 1',\n            dag=example_dag)\ntask1 = BashOperator(\n            task_id='second_task',\n            bash_command='echo 2',\n            dag=example_dag)\n\n# Set first_task to run before second_task\ntask1 >> task2 # or task2 << task1\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("img",{alt:"\ud6c4",src:t(7371).Z,width:"713",height:"505"}),"  ")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"multiple task dependencies"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"task1 >> task2 >> task3 >> task4\n")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"task1 >> task2 << task3\n")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"task1 >> task2\ntask3 >> task2\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("img",{alt:"\ub2e4\uc911",src:t(3423).Z,width:"679",height:"545"})))))),(0,n.kt)("h3",{id:"pythonoperator"},"PythonOperator"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"PythonOperator"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\ud30c\uc774\uc36c \ud568\uc218 \ub610\ub294 callable \uba54\uc11c\ub4dc \uc2e4\ud589")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\ud544\uc694\uc5d0 \ub530\ub77c ",(0,n.kt)("inlineCode",{parentName:"p"},"python_callable"),"\uc5d0 argument \ub610\ub294 keword argument\ub97c \uc804\ub2ec\ud560 \uc218 \uc788\uc74c ")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\uc9c0\uc815\ub41c task\uc5d0 argument\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc744 \uc9c0\uc6d0"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"position, keyword arugment"),(0,n.kt)("li",{parentName:"ul"},"keyword argument\ub294 ",(0,n.kt)("inlineCode",{parentName:"li"},"op_kwargs"),"\ub97c \ud1b5\ud574 \uad6c\ud604"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"op_kwargs"),"\ub294 dictionary"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"example"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from airflow.operators.python_operator import PythonOperator\n\ndef printme():\n    print(\"This goes in the logs!\")\n\npython_task = PythonOperator(\n    task_id='simple_print',\n    python_callable=printme,\n    dag=example_dag\n)\n")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def sleep(length_of_time):\n    time.sleep(length_of_time)\n\nsleep_task = PythonOperator(\n    task_id='sleep',\n    python_callable=sleep,\n    op_kwargs={'length_of_time': 5} # \ud568\uc218\uc758 \uc778\uc790\uc640 \uc774\ub984\uc774 \ub3d9\uc77c\ud574\uc57c \ud568\n    dag=example_dag\n)\n")))))),(0,n.kt)("h3",{id:"emailoperator"},"EmailOperator"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Airflow \uc791\uc5c5 \ub0b4\uc5d0\uc11c \uc774\uba54\uc77c\uc744 \ubcf4\ub0c4")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"HTML \ucee8\ud150\uce20 \ubc0f \ucca8\ubd80 \ud30c\uc77c\uc744 \ud3ec\ud568\ud558\uc5ec \uc774\uba54\uc77c\uc758 \uc77c\ubc18\uc801\uc778 \uad6c\uc131 \uc694\uc18c\ub97c \ud3ec\ud568\ud560 \uc218 \uc788\uc74c")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"example"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from airflow.operators.email_operator import EmailOperator\n\nemail_task = EmailOperator(\n    task_id='email_sales_report',\n    to='sales_manager@example.com',\n    subject='Automated Sales Report',\n    html_content='Attached is the latest sales report',\n    files='latest_sales.xlsx',\n    dag=example_dag\n)\n")))),(0,n.kt)("h3",{id:"dag-runs"},"DAG Runs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\ud2b9\uc815 \uc2dc\uc810 workflow\uc758 instance"),(0,n.kt)("li",{parentName:"ul"},"DAG\uc740 \uc218\ub3d9\uc73c\ub85c \uc2e4\ud589\ud558\uac70\ub098 DAG \uc815\uc758\ub420 \ub54c \uc804\ub2ec\ub41c ",(0,n.kt)("inlineCode",{parentName:"li"},"schedule_interval")," parameter\ub97c \ud1b5\ud574 \uc2e4\ud589\ud560 \uc218 \uc788\uc74c"),(0,n.kt)("li",{parentName:"ul"},"\uac01 DAG Runs\ub294 task\uc5d0 \ub300\ud55c \uc0c1\ud0dc(running, failed, success)\ub97c \uac16\uace0 \uc788\uc73c\uba70, \uac1c\ubcc4 task\ub294 \uc774\ub7f0 \uc0c1\ud0dc \ub610\ub294 \uae30\ud0c0 \uc0c1\ud0dc(queued, skipped)\ub3c4 \uac00\uc9c8 \uc218 \uc788\uc74c")),(0,n.kt)("h3",{id:"schedule"},"Schedule"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"DAG\uc744 scheduling\ud560 \ub54c \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \uace0\ub824\ud574\uc57c \ud560 \uc5ec\ub7ec \ud2b9\uc131\uc774 \uc788\uc74c"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"start_date"),": DAG\uc744 \ucc98\uc74c\uc73c\ub85c \uc608\uc57d\ud560 \uc218 \uc788\ub294 \uc2dc\uac04 \uc9c0\uc815",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc77c\ubc18\uc801\uc73c\ub85c Python datetime \uac1d\uccb4\ub85c \uc815\uc758"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"end_date"),": DAG\uc744 \uc608\uc57d\ud560 \uc218 \uc788\ub294 \ub9c8\uc9c0\ub9c9 \uc2dc\uac04 \uc9c0\uc815"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"max_tries"),": DAG run\uc774 \uc644\uc804\ud788 \uc2e4\ud328\ud558\uae30 \uc804\uc5d0 \uc7ac\uc2dc\ub3c4 \ud560 \ud69f\uc218"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"schedule_interval"),": \uc5bc\ub9c8\ub098 DAG\uc744 scheduling\ud558\ub294\uc9c0 \uce21\uc815 \ud69f\uc218",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"DAG\uac00 \uc644\uc804\ud788 \uc2e4\ud589\ub420 \ub54c\uac00 \uc544\ub2c8\ub77c \uc608\uc815\ub41c \uc2dc\uac04\uc758 \ucd5c\uc18c\uac12\uacfc \ucd5c\ub300\uac12\uc744 \ub098\ud0c0\ub0c4"),(0,n.kt)("li",{parentName:"ul"},"cron \uad6c\ubb38 \ub610\ub294 \ub0b4\uc7a5\ub41c \uc124\uc815\uc744 \ud1b5\ud574 \uba87 \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \uc815\uc758\ud560 \uc218 \uc788\uc74c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Unix cron format"),(0,n.kt)("li",{parentName:"ul"},"Airflow\uc5d0\ub294 \uc790\uc8fc \uc0ac\uc6a9\ub418\ub294 \uc2dc\uac04 \uac04\uaca9\uc744 \ub098\ud0c0\ub0b4\ub294 preset \uc874\uc7ac",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@hourly"),": \ud55c \uc2dc\uac04\uc5d0 \ud55c \ubc88 \uc2e4\ud589 - ",(0,n.kt)("inlineCode",{parentName:"li"},"0 * * * *")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@daily"),": \ud558\ub8e8\uc5d0 \ud55c \ubc88 \uc2e4\ud589 - ",(0,n.kt)("inlineCode",{parentName:"li"},"0 0 * * *")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@weekly"),": \uc77c\uc8fc\uc77c\uc5d0 \ud55c \ubc88 \uc2e4\ud589 - ",(0,n.kt)("inlineCode",{parentName:"li"},"0 0 * * 0")," "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@montly"),": \ud55c \ub2ec\uc5d0 \ud55c \ubc88 \uc2e4\ud589 - ",(0,n.kt)("inlineCode",{parentName:"li"},"0 0 0 * 0")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@yearly"),": \ud55c \ud574\uc5d0 \ud55c \ubc88 \uc2e4\ud589 - ",(0,n.kt)("inlineCode",{parentName:"li"},"0 0 0 0 0")))),(0,n.kt)("li",{parentName:"ul"},"Special preset",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"None"),": DAG\uc744 scheduling\ud558\uc9c0 \uc54a\uc73c\uba70, \uc218\ub3d9\uc73c\ub85c trigger\ub418\ub294 workflow\uc5d0 \uc0ac\uc6a9"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"once"),": DAG\uc744 \ud55c \ubc88\ub9cc \uc608\uc57d"))))),(0,n.kt)("li",{parentName:"ul"},"scheduling\uc740 \uc2dc\uc791 \ub0a0\uc9dc\uc640 \uc7a0\uc7ac\uc801\uc778 \uc885\ub8cc \ub0a0\uc9dc \uc0ac\uc774\uc5d0 \ubc1c\uc0dd"),(0,n.kt)("li",{parentName:"ul"},"DAG run\uc744 \uc608\uc57d\ud560 \ub54c Airflow\ub294 \uc2dc\uc791 \ub0a0\uc9dc\ub97c \uac00\ub2a5\ud55c \uac00\uc7a5 \ube60\ub978 \uac12\uc73c\ub85c \uc0ac\uc6a9\ud558\uc9c0\ub9cc \uc801\uc5b4\ub3c4 \ud558\ub098\uc758 ",(0,n.kt)("inlineCode",{parentName:"li"},"schedule_interval"),"\uc774 \uc2dc\uc791 \ub0a0\uc9dc\ub97c \uc9c0\ub098\uae30 \uc804\uae4c\uc9c0\ub294 \uc2e4\uc81c\ub85c \uc544\ubb34\uac83\ub3c4 \uc608\uc57d\ud558\uc9c0 \uc54a\uc74c"),(0,n.kt)("li",{parentName:"ul"},"\uc544\ub798\uc758 \ucf54\ub4dc \uc0c1\ud669\uc77c \ub54c 25\uc77c\uc774 \uc544\ub2c8\ub77c \ub2e4\uc74c \ub0a0\uc9dc\uc778 26\uc77c\uc744 \uc0ac\uc6a9",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"'start_date': datetime(2020, 2, 25),\n'scedule_interval': @daily\n")))))),(0,n.kt)("h2",{id:"maintaining-and-monitoring-airflow-workflows"},"Maintaining and monitoring Airflow workflows"),(0,n.kt)("h3",{id:"sensor"},"Sensor"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\ud2b9\uc815 \uc870\uac74\uc774 \ucc38\uc774 \ub418\uae30\ub97c \uae30\ub2e4\ub9ac\ub294 \ud2b9\ubcc4\ud55c \uc885\ub958\uc758 \uc5f0\uc0b0\uc790",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc0dd\uc131 \ub300\uae30"),(0,n.kt)("li",{parentName:"ul"},"DB record \uc5c5\ub85c\ub4dc"),(0,n.kt)("li",{parentName:"ul"},"\uc6f9 request\uc758 \ud2b9\uc815 response"))),(0,n.kt)("li",{parentName:"ul"},"\uc13c\uc11c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc870\uac74\uc774 \ucc38\uc778\uc9c0 \ud655\uc778\ud558\ub294 \ube48\ub3c4\ub97c \uc815\uc758"),(0,n.kt)("li",{parentName:"ul"},"\uc5f0\uc0b0\uc790\uc758 \ud55c \uc885\ub958\uc774\uae30 \ub54c\ubb38\uc5d0 \uc77c\ubc18 \uc5f0\uc0b0\uc790\uc640 \uac19\uc774 task\uc5d0 \ud560\ub2f9 ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"bitshift\ub3c4 \uc0ac\uc6a9 \uac00\ub2a5"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"airflow.sensors.base_sensor_operator")),(0,n.kt)("li",{parentName:"ul"},"argument",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mode"),": \uc13c\uc11c\uc758 \uc870\uac74\uc744 \uc54c\ub824\uc8fc\ub294 \ubc29\ubc95",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mode='poke'"),": default, worker slot\uc744 \ud3ec\uae30\ud558\uc9c0 \uc54a\uace0 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uacc4\uc18d \ud655\uc778"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mode='reschedule"),": worker slot\uc744 \ud3ec\uae30\ud558\uace0 \ub2e4\ub978 slot\uc774 \uc0ac\uc6a9 \uac00\ub2a5\ud560 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9ac\ub294 \uac83",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"worker slot: task \uc2e4\ud589 \uae30\ub2a5 "))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"poke_interval"),": poke \ubaa8\ub4dc\uc5d0 \uc0ac\uc6a9, Airflow\uc5d0 \uc870\uac74\uc744 \ud655\uc778\ud558\ub294 \ube48\ub3c4\ub97c \uc54c\ub824\uc90c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Airflow scheduler\uc5d0 \uacfc\ubd80\ud558\uac00 \uac78\ub9ac\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub824\uba74 1\ubd84 \uc774\uc0c1\uc774\uc5b4\uc57c \ud568"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"timeout"),": sensor task\ub97c \uc2e4\ud328\ub85c \ud45c\uc2dc\ud558\uae30 \uc804\uc5d0 \ub300\uae30\ud560 \uc2dc\uac04",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ubb38\uc81c\ub97c \ubc29\uc9c0\ud558\ub824\uba74 timeout\uc744 shedule interval\ubcf4\ub2e4 \ud6e8\uc52c \uc9e7\uac8c \uc124\uc815\ud574\uc57c \ud568"))),(0,n.kt)("li",{parentName:"ul"},"\uc5f0\uc0b0\uc790\uc774\ubbc0\ub85c task_id, dag\uc640 \uac19\uc740 attribute\ub3c4 \ud3ec\ud568")))),(0,n.kt)("h3",{id:"file-sensor"},"File Sensor"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"FileSensor",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"airflow.contrib.sensors")," \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0 \uc874\uc7ac")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\ud30c\uc77c \uc2dc\uc2a4\ud15c\uc758 \ud2b9\uc815 \uc704\uce58\uc5d0 \ud30c\uc77c\uc774 \uc788\ub294\uc9c0 \ud655\uc778")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\uc8fc\uc5b4\uc9c4 \ub514\ub809\ud1a0\ub9ac \ub0b4\uc758 \ubaa8\ub4e0 \ud30c\uc77c\uc744 \ud655\uc778")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"example"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from airflow.contrib.sensors.file_sensor import FileSensor\n\nfile_sensor_task = FileSensor(task_id='file_sense',\n                              filepath='salesdata.csv',\n                              poke_interval=300,\n                              dag=sales_report_dag)\n\ninit_sales_cleanup >> file_sensor_task >> generate_report \n")))))),(0,n.kt)("h3",{id:"other-sensor"},"Other sensor"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ExteranlTaskSensor"),": \ub2e4\ub978 DAG\uc5d0 \uc788\ub294 \uc791\uc5c5\uc774 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bc",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ud558\ub098\uc758 workflow\ub97c \ub108\ubb34 \ubcf5\uc7a1\ud558\uac8c \ub9cc\ub4e4\uc9c0 \uc54a\uace0\ub3c4 \ub2e4\ub978 workflow task\uc5d0 \ub290\uc2a8\ud558\uac8c \uc5f0\uacb0\ud560 \uc218 \uc788\uc74c"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HttpSensor"),": \uc6f9 URL\uc744 request(\uc694\uccad)\ud558\uace0 response(\uc751\ub2f5) \ubc1b\uc744 content\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc74c"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"SqlSensor"),": SQL query\ub97c \uc2e4\ud589\ud558\uc5ec content \ud655\uc778"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"airflow.sensors"),"\uc640 ",(0,n.kt)("inlineCode",{parentName:"li"},"airflow.contrib.sensors"),"\uc5d0\uc11c \ub2e4\uc591\ud55c \uc13c\uc11c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c")),(0,n.kt)("h3",{id:"sensor\uc640-operator\ub294-\uc5b8\uc81c-\uc0ac\uc6a9\ud558\ub294\uac00"},"sensor\uc640 operator\ub294 \uc5b8\uc81c \uc0ac\uc6a9\ud558\ub294\uac00"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \uc77c\ubc18\uc801\uc778 operator\ub97c \uc0ac\uc6a9"),(0,n.kt)("li",{parentName:"ul"},"sensor\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"condition\uc774 \uc5b8\uc81c \ucc38\uc778\uc9c0 \ud655\uc2e4\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc608\ub97c \ub4e4\uc5b4 \uc6d0\ub798\ub294 \uadf8 \ub0a0 \uc644\ub8cc\ub420 \uac83\uc744 \uc608\uc0c1\ud558\uace0 \uc788\uc9c0\ub9cc, 1\uc2dc\uac04 \uc815\ub3c4 \ucc28\uc774\uac00 \ub0a0 \uc218 \uc788\ub294 \uacbd\uc6b0 \uc13c\uc11c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc74c"))),(0,n.kt)("li",{parentName:"ul"},"condition\uc744 \uacc4\uc18d \ud655\uc778\ud558\uace0 \uc2f6\uc9c0\ub9cc \uc804\uccb4 DAG\uc744 \uc989\uc2dc \uc2e4\ud328\ud558\uc9c0 \uc54a\uc73c\ub824\ub294 \uacbd\uc6b0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"DAG\ub97c \uc815\uc758\ud560 \ub54c \uc57d\uac04\uc758 \uc720\uc5f0\uc131 \uc81c\uacf5"))),(0,n.kt)("li",{parentName:"ul"},"DAG\uc5d0 cycle \ucd94\uac00 \uc5c6\uc774 \ubc18\ubcf5\uc801\uc73c\ub85c \uac80\uc0ac\ud558\ub824\ub294 \uacbd\uc6b0")))),(0,n.kt)("h3",{id:"executor"},"Executor"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"workflow \ub0b4 \uc815\uc758\ub418\uc5b4 \uc788\ub294 task\ub97c \uc2e4\uc81c\ub85c \uc2e4\ud589\ud558\ub294 \uc694\uc18c"),(0,n.kt)("li",{parentName:"ul"},"task \uc9d1\ud569\uc744 \uc2e4\ud589\ud558\uae30 \uc704\ud55c \uae30\ub2a5\uacfc \ub3d9\uc791\uc744 \uac00\uc9d0"),(0,n.kt)("li",{parentName:"ul"},"\uc77c\ubd80\ub294 \ub85c\uceec \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ud55c \ubc88\uc5d0 \ud558\ub098\uc758 task\ub97c \uc2e4\ud589\ud558\uac70\ub098 cluster\uc758 \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c \uac04\uc5d0 \uac1c\ubcc4 \uc791\uc5c5\uc744 \ubd84\ud560\ud560 \uc218 \uc788\uc74c -> \uc0ac\uc6a9 \uac00\ub2a5\ud55c worker slot\uc758 \uc218"),(0,n.kt)("li",{parentName:"ul"},"example of executor",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"SequentialExecutor"),(0,n.kt)("li",{parentName:"ul"},"LocalExecutor"),(0,n.kt)("li",{parentName:"ul"},"CeleryExecutor"))),(0,n.kt)("li",{parentName:"ul"},"\ud544\uc694\ud55c \uacbd\uc6b0 \uace0\uc720\ud55c executor\ub97c \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc74c")),(0,n.kt)("h3",{id:"sequentialexecutor"},"SequentialExecutor"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Airflow\uc758 \uae30\ubcf8 \uc2e4\ud589 \uc5d4\uc9c4"),(0,n.kt)("li",{parentName:"ul"},"\ud55c \ubc88\uc5d0 \ud558\ub098\uc758 \uc791\uc5c5\ub9cc \uc2e4\ud589",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ub3d9\uc77c\ud55c \uc2dc\uac04\uc5d0 \uc5ec\ub7ec workflow\ub97c scheduling\ud558\uba74 \uc608\uc0c1\ubcf4\ub2e4 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9b4 \uc218 \uc788\uc74c"))),(0,n.kt)("li",{parentName:"ul"},"task\uc758 flow\ub97c \ub530\ub974\ub294 \uac83\uc774 \uac04\ub2e8\ud558\uae30 \ub54c\ubb38\uc5d0 \ub514\ubc84\uae45\uc5d0 \uc720\uc6a9",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc77c\ubd80 IDE\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc74c"))),(0,n.kt)("li",{parentName:"ul"},"\ud559\uc2b5 \ubc0f \ud14c\uc2a4\ud2b8\uc5d0\ub294 \ub9e4\uc6b0 \uc720\uc6a9\ud558\uc9c0\ub9cc, task \ub9ac\uc18c\uc2a4\uc758 \uc81c\ud55c\uc73c\ub85c \uc778\ud574 \uc2e4\uc81c \ud504\ub85c\ub355\uc158\uc5d0\ub294 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc74c")),(0,n.kt)("h3",{id:"localexecutor"},"LocalExecutor"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"single \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc2e4\ud589\ub428"),(0,n.kt)("li",{parentName:"ul"},"\uac01 \uc791\uc5c5\uc744 \ub85c\uceec \uc2dc\uc2a4\ud15c\uc758 \ud504\ub85c\uc138\uc2a4\ub85c \ucde8\uae09\ud558\uba70 \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4(CPU, \uba54\ubaa8\ub9ac \ub4f1)\uc5d0\uc11c \uc6d0\ud558\ub294, \ud5c8\uc6a9\ub418\ub294, \uc694\uccad\ud558\ub294 \ub9cc\ud07c\uc758 \ub3d9\uc2dc\uc5d0 task\ub97c \uc2dc\uc791\ud560 \uc218 \uc788\uc74c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc5ec\uae30\uc11c \ub3d9\uc2dc\uc5d0 \uc2dc\uc791\ud55c\ub2e4\ub294 \uac83\uc740 \uc2dc\uc2a4\ud15c\uc758 \ubcd1\ub82c \ucc98\ub9ac\ub97c \uc758\ubbf8\ud558\uba70, parallelism \uc124\uc815\uac12\uc5d0 \ub530\ub77c \ub450 \uac00\uc9c0 \uad6c\uc870\ub85c \ub098\ub268",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"parallelism \uc124\uc815\uac12\uc774 0\uc778 \uacbd\uc6b0\uc5d0\ub294 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \ub300\ud574 \ubb34\ud55c\ub300\ub85c task\ub97c \uc2e4\ud589"),(0,n.kt)("li",{parentName:"ul"},"parallelism \uc124\uc815\uac12\uc774 0 \uc774\uc0c1\uc77c \uacbd\uc6b0 \uc124\uc815\uac12\uc758 \uac1c\uc218\ub9cc\ud07c \ud504\ub85c\uc138\uc2a4 \uc218\ub97c \uc81c\ud55c\ud558\uc5ec task \uc2e4\ud589 "))))),(0,n.kt)("li",{parentName:"ul"},"single production \uc2dc\uc2a4\ud15c\uc5d0 \uc801\ud569\ud558\uba70, \uc9c0\uc815\ub41c \ud638\uc2a4\ud2b8 \uc2dc\uc2a4\ud15c\uc758 \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\uc74c")),(0,n.kt)("h3",{id:"celeryexecutor"},"CeleryExecutor"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\uc5ec\ub7ec \uc2dc\uc2a4\ud15c\uc774 \uae30\ubcf8 cluster\ub85c \ud1b5\uc2e0\ud560 \uc218 \uc788\ub3c4\ub85d Python\uc73c\ub85c \uc791\uc131\ub41c \uc77c\ubc18 \ub300\uae30\uc5f4 \uc2dc\uc2a4\ud15c"),(0,n.kt)("li",{parentName:"ul"},"\uc5ec\ub7ec Airflow \uc2dc\uc2a4\ud15c\uc744 \ud2b9\uc815 workflow/task\uc758 \uc9d1\ud569\uc5d0 \ub300\ud55c worker\ub85c \uad6c\uc131\ud560 \uc218 \uc788\uc74c "),(0,n.kt)("li",{parentName:"ul"},"workflow\uc758 \uade0\ud615\uc744 \ub9de\ucd94\uae30 \uc704\ud574 \uc5b8\uc81c\ub4e0\uc9c0 \uc2dc\uc2a4\ud15c\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc74c"),(0,n.kt)("li",{parentName:"ul"},"\uc124\uc815 \ubc0f \uad6c\uc131\ud558\ub294 \uac83\uc774 \ub354 \uc5b4\ub824\uc6c0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Airflow\ub97c \uad6c\uc131\ud558\uae30 \uc804\uc5d0 \uc791\ub3d9\ud558\ub294 Celery\ub97c \uad6c\uc131\ud574\uc57c \ud568"),(0,n.kt)("li",{parentName:"ul"},"\uad6c\uc131\ud558\uae30 \ub354 \uc5b4\ub835\uc9c0\ub9cc \ub9ce\uc740 \uc218\uc758 DAG\ub85c \uc791\uc5c5\ud558\uac70\ub098 \ucc98\ub9ac \uc694\uad6c \uc0ac\ud56d\uc774 \uc99d\uac00\ud560 \uac83\uc73c\ub85c \uc608\uc0c1\ub418\ub294 \uacf3\uc5d0 \uc0ac\uc6a9")))),(0,n.kt)("h3",{id:"\uc0ac\uc6a9-\uc911\uc778-executor-\ud655\uc778"},"\uc0ac\uc6a9 \uc911\uc778 executor \ud655\uc778"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"airflow.cfg")," \ud30c\uc77c\uc744 \ud655\uc778 ",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'cat airflow/airflow.cfg | grep "executor = "\n')),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"airflow.cfg")," \ud30c\uc77c: executor\uc758 type\uc744 \ud3ec\ud568\ud558\uc5ec \ub300\ubd80\ubd84\uc758 Airflow instance\uc5d0 \ub300\ud55c \uad6c\uc131 \ubc0f \uc124\uc815\uc774 \uc815\uc758\ub418\ub294 \ud30c\uc77c"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"airflow list_dags"),"\ub97c \uc2e4\ud589\ud558\uc5ec \ud655\uc778",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"airflow list_dags\n")))),(0,n.kt)("h3",{id:"debugging-and-troubleshooting-in-airflow"},"Debugging and troubleshooting in Airflow"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Airflow\ub97c \uc0ac\uc6a9\ud558\uba70 \ubc1c\uc0dd\ud558\ub294 \ubb38\uc81c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc77c\uc815\uc5d0 \ub530\ub77c \uc2e4\ud589\ub418\uc9c0 \uc54a\ub294 DAG",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc774\uc720\ub294 scheduler\uac00 \uc2e4\ud589\ub418\uace0 \uc788\uc9c0 \uc54a\uc740 \uacbd\uc6b0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Airflow scheduler\ub294 DAG run\uacfc task scheduling\uc744 \ucc98\ub9ac"),(0,n.kt)("li",{parentName:"ul"},"\uc2e4\ud589\ub418\uace0 \uc788\uc9c0 \uc54a\uc73c\uba74 \uc0c8\ub85c\uc6b4 task\uac00 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc74c\n",(0,n.kt)("img",{alt:"\uc5d0\ub7ec",src:t(8712).Z,width:"1179",height:"315"}),"  "),(0,n.kt)("li",{parentName:"ul"},"airflow scheduler\ub97c command-line\uc5d0\uc11c \uc2e4\ud589\ud558\uc5ec \ud574\uacb0"))),(0,n.kt)("li",{parentName:"ul"},"\uc2dc\uc791 \ub0a0\uc9dc \ub610\ub294 \ub9c8\uc9d0\uac00 DAG run \uc774\ud6c4 \uc801\uc5b4\ub3c4 \ud558\ub098 \uc774\uc0c1\uc758 schedule_interval\uc774 \uc9c0\ub098\uc9c0 \uc54a\uc740 \uacbd\uc6b0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc694\uad6c\uc0ac\ud56d\uc5d0 \ub9de\uac8c \uc2dc\uc791 \ub0a0\uc9dc\ub098 \uc77c\uc815 \uac04\uaca9\uc744 \uc218\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc74c"))),(0,n.kt)("li",{parentName:"ul"},"executor\uac00 task\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c \uc5ec\uc720 slot\uc774 \uc5c6\ub294 \uacbd\uc6b0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"executor \uc720\ud615\uc744 \ub354 \ub9ce\uc740 \uc791\uc5c5\uc774 \uac00\ub2a5\ud55c \uac83\uc73c\ub85c \ubcc0\uacbd(LocalExecutor \ub610\ub294 CeleryExecutor)"),(0,n.kt)("li",{parentName:"ul"},"\uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4(RAM, CPU)\ub97c \ucd94\uac00"),(0,n.kt)("li",{parentName:"ul"},"DAG\uc758 scheduling\uc744 \ubcc0\uacbd"))))),(0,n.kt)("li",{parentName:"ul"},"\uc2dc\uc2a4\ud15c\uc5d0 \ub85c\ub4dc\ub418\uc9c0 \uc54a\ub294 DAG",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"web UI \ub610\ub294 ",(0,n.kt)("inlineCode",{parentName:"li"},"airflow list_dags")," \uacb0\uacfc \ud654\uba74\uc5d0 \ub098\ud0c0\ub098\uc9c0 \uc54a\uc740 \uacbd\uc6b0",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ud30c\uc774\uc36c \ud30c\uc77c\uc774 \uc608\uc0c1 DAG \ud3f4\ub354\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778"),(0,n.kt)("li",{parentName:"ul"},"airflow.cfg \ud30c\uc77c\uc744 \uac80\ud1a0\ud558\uc5ec \ud604\uc7ac DAG \ud3f4\ub354 \uc124\uc815\uc744 \ud655\uc778 \uac00\ub2a5",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"dags_folder"),"\ub97c \ud655\uc778"))),(0,n.kt)("li",{parentName:"ul"},"\ud3f4\ub354 \uacbd\ub85c\ub294 \uc808\ub300\uacbd\ub85c\uc774\uc5ec\uc57c \ud568"))))),(0,n.kt)("li",{parentName:"ul"},"Syntax error",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ud30c\uc774\uc36c \ucf54\ub4dc\uc5d0\uc11c \uad6c\ubb38 \uc624\ub958",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"airflow list_dags")," \uc0ac\uc6a9",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"airflow list_dags\n"))),(0,n.kt)("li",{parentName:"ul"},"\ud30c\uc774\uc36c\uc73c\ub85c DAG \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589 -> \ud30c\uc774\uc36c \uc778\ud130\ud504\ub9ac\ud130\ub97c \uc0ac\uc6a9",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"python3 <dagfile.py>\n")))))))))),(0,n.kt)("h3",{id:"sla-and-reporting-in-airflow"},"SLA and reporting in Airflow"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"SLA"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Service Level Agreement"),(0,n.kt)("li",{parentName:"ul"},"\ube44\uc988\ub2c8\uc2a4\uc5d0\uc11c\ub294 \uac00\ub3d9 \uc2dc\uac04 \ub610\ub294 \uac00\uc6a9\uc131 \ubcf4\uc7a5"),(0,n.kt)("li",{parentName:"ul"},"Airflow\uc5d0\uc11c\ub294 task \ub610\ub294 DAG\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc2dc\uac04"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"SLA miss"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"task \ub610\ub294 DAG\uac00 SLA\uc758 \uc608\uc0c1 \ud0c0\uc774\ubc0d\uc744 \ucda9\uc871\ud558\uc9c0 \ubabb\ud558\ub294 \uc0c1\ud669"),(0,n.kt)("li",{parentName:"ul"},"SLA\uac00 \ub204\ub77d\ub41c \uacbd\uc6b0 \uc2dc\uc2a4\ud15c \uad6c\uc131\uc5d0 \ub530\ub77c \uc774\uba54\uc77c \uacbd\uace0\uac00 \uc804\uc1a1\ub41f\uace0 \ub85c\uadf8\uc5d0 \uba54\ubaa8\uac00 \uc791\uc131\ub428"),(0,n.kt)("li",{parentName:"ul"},"web UI\uc5d0\uc11c ",(0,n.kt)("inlineCode",{parentName:"li"},"Browse -> SLA Misses")," \uba54\ub274\uc5d0\uc11c \ud655\uc778 \uac00\ub2a5"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"SLA \uc815\uc758"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\ub2e4\uc591\ud55c \ubc29\ubc95\uc774 \uc874\uc7ac")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"task\uc5d0 \ub300\ud55c ",(0,n.kt)("inlineCode",{parentName:"p"},"sla")," argument\ub97c \uc0ac\uc6a9"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"task1 = BashOperator(\n    task_id='sla_task',\n    bash_command='runcode.sh',\n    sla=timedelta(seconds=30),\n    dag=dag)\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"default_args")," dictionary\ub97c \uc0ac\uc6a9\ud558\uace0 sla key\ub97c \uc815\uc758\ud558\ub294 \ubc29\ubc95"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"default_args={\n    'sla': timedelta(minutes=20),\n    'start_date': datetime(2020, 2, 20)\n}\ndag = DAG('sla_dag', default_args=default_args)\n")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"timedelta \uac1d\uccb4"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"datetime \uac1d\uccb4\ucc98\ub7fc datetime \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0 \uc788\uc74c"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"from datetime import timedelta")),(0,n.kt)("li",{parentName:"ul"},"days, hours, minutes, seconds, weeks\ub97c argument\ub85c \ubc1b\uc74c"),(0,n.kt)("li",{parentName:"ul"},"milliseconds, microseconds argument\ub3c4 \uc874\uc7ac\ud558\uc9c0\ub9cc Airflow\uc5d0\uc11c \uc801\uc6a9 \ubd88\uac00")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from datetime import timedelta\n\ntimedelta(seconds=30)\ntimedelta(weeks=2)\ntimedelta(days=4, hours=10, minutes=20, seconds=30)\n"))))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"\uc77c\ubc18\uc801\uc778 reporting"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\ubcf4\uace0 \ubaa9\uc801\uc73c\ub85c Airflow\uc5d0 \ub0b4\uc7a5\ub41c \uc774\uba54\uc77c \uc54c\ub78c\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc131\uacf5, \uc2e4\ud328, \uc5d0\ub7ec/\uc7ac\uc2dc\ub3c4 \uc2dc \uba54\uc2dc\uc9c0\ub97c \ubcf4\ub0b4\uae30 \uc704\ud55c built-in \uc635\uc158\uc774 \uc874\uc7ac"))),(0,n.kt)("li",{parentName:"ul"},"DAG \uc0dd\uc131 \uc2dc \uc804\ub2ec\ub418\ub294 default_args dict\uc758 key\ub97c \ud1b5\ud574 \ucc98\ub9ac\ub428")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"default_args={\n  'email': ['airflowalerts@datacamp.com'],\n  'email_on_failure': True,\n  'email_on_retry': False,\n  'email_on_success': True,\n  ...\n  }\n")))),(0,n.kt)("h2",{id:"building-production-pipelines-in-airflow"},"Building production pipelines in Airflow"),(0,n.kt)("h3",{id:"templates"},"Templates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"DAG run \uc911\uc5d0 \uc815\ubcf4\ub97c \ub300\uccb4\ud560 \uc218 \uc788\uc74c",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"template \uc815\ubcf4\uac00 \ud3ec\ud568\ub41c DAG\uc774 \uc2e4\ud589\ub420 \ub54c\ub9c8\ub2e4 \uc815\ubcf4\uac00 \ud574\uc11d\ub418\uc5b4 DAG run\uc5d0 \ud3ec\ud568\ub428"))),(0,n.kt)("li",{parentName:"ul"},"task\ub97c \uc815\uc758\ud560 \ub54c \ucd94\uac00\uc801\uc778 \uc720\uc5f0\uc131 \uc81c\uacf5"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Jinja")," \ud15c\ud50c\ub9bf \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0dd\uc131"),(0,n.kt)("li",{parentName:"ul"},"Non-Templated BashOperator example",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"t1 = BashOperator(\n        task_id='first_task',\n        bash_command='echo \"Reading file1.txt\"',\n        dag=dag)\nt2 = BashOperator(\n        task_id='second_task',\n        bash_command='echo \"Reading file2.txt\"',\n        dag=dag)\n"))),(0,n.kt)("li",{parentName:"ul"},"Templated Bashoperator example",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},'temlated_command = """\necho "Reading {{ params.filename }}"\n"""\nt1 = BashOperator(\n        task_id=\'template_task\',\n        bash_command=templated_command,\n        params={\'filename\': \'file1.txt\'}\n        dag=example_dag)\n')),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"templated_command = \"\"\"\necho \"Reading {{ params.filename }}\"\n\"\"\"\nt1 = BashOperator(\n        task_id='template_task',\n        bash_command=templated_command,\n        params={'filename': 'file1.txt'}\n        dag=example_dag)\nt2 = BashOperator(\n        task_id='template_task',\n        bash_command=templated_command,\n        params={'filename': 'file2.txt'}\n        dag=example_dag)\n"))),(0,n.kt)("li",{parentName:"ul"},"Jinja template for\ubb38 \uc0ac\uc6a9 \uc608\uc81c",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"templated_command=\"\"\"\n{% for filename in params.filenames %}\n    echo \"Reading {{ filename }}\"\n{% endfor %}\n\"\"\"\nt1 = BashOperator(\n    task_id='template_task',\n    bash_command=templated_command,\n    params={'filenames': ['file1.txt', 'file2.txt']}\n    dag=example_dag)\n")))),(0,n.kt)("h3",{id:"variables"},"Variables"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\ud15c\ud50c\ub9bf \uc2dc\uc2a4\ud15c\uc758 \uc77c\ubd80\ub85c Airflow\ub294 built-in runtime \ubcc0\uc218\ub4e4\uc744 \uc81c\uacf5"),(0,n.kt)("li",{parentName:"ul"},"DAG runs, task, \uc2dc\uc2a4\ud15c \uad6c\uc131\uc5d0 \ub300\ud55c \ub2e4\uc591\ud55c \uc815\ubcf4 \uc81c\uacf5"),(0,n.kt)("li",{parentName:"ul"},"example",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc774 \uc608\uc81c \ub9d0\uace0 \ub2e4\ub978 \ubcc0\uc218\ub4e4\ub3c4 \ub9ce\uc73c\ub2c8 Airflow \ubb38\uc11c \ucc38\uace0"),(0,n.kt)("li",{parentName:"ul"},"datetime \uac1d\uccb4\uac00 \uc544\ub2c8\ub77c \ubb38\uc790\uc5f4"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{{ ds }}"),": Execution Date, YYYY-MM-DD"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{{ ds_nodash }}"),": Execution Date, no dashes, YYYYMMDD"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{{ prev_ds }}"),": Previous Execution date, YYYY-MM-DD"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{{ prev_ds_nodash }}"),": Prev Execution date, no dashes, YYYYMMDD"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{{ dag }}"),": DAG object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{{ conf }}"),": Airflow config object")))),(0,n.kt)("h3",{id:"macros"},"Macros"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Airflow \ud15c\ud50c\ub9bf\uc5d0 \ub300\ud55c \ub2e4\uc591\ud55c \uc720\uc6a9\ud55c \uac1d\uccb4 \ub610\ub294 \uba54\uc11c\ub4dc\uc5d0 \ub300\ud55c \ucc38\uc870\ub97c \uc81c\uacf5"),(0,n.kt)("li",{parentName:"ul"},"example",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc774 \uc608\uc81c \ub9d0\uace0 \ub2e4\ub978 \ub9e4\ud06c\ub85c\ub3c4 \ub9ce\uc73c\ub2c8 Airflow \ubb38\uc11c \ucc38\uace0"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{{ macros.datetime }}"),": ",(0,n.kt)("inlineCode",{parentName:"li"},"datetime.datetime")," object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{{ macros.timedelta }}"),": ",(0,n.kt)("inlineCode",{parentName:"li"},"datetime.timedelta")," object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{{ macros.uuid }}"),": Python\uc758 ",(0,n.kt)("inlineCode",{parentName:"li"},"uuid")," object"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{{ macros.ds_add('2020-04-15', 5) }}"),": Modify days from a date, this example returns 2020-04-20")))),(0,n.kt)("h3",{id:"branch"},"Branch"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"conditional logic \uc81c\uacf5"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"operator\uc758 \uacb0\uacfc\uc5d0 \ub530\ub77c task\ub97c \uc120\ud0dd\uc801\uc73c\ub85c \uc2e4\ud589\ud558\uac70\ub098 \uc2a4\ud0b5\ud558\ub294 \uae30\ub2a5"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"BranchPythonOperator")," \uc0ac\uc6a9"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc774\ubc16\uc5d0\ub3c4 \ub2e4\ub978 branch operator\uac00 \uc788\uc73c\uba70 \ud544\uc694\ud55c \uacbd\uc6b0 \uc9c1\uc811 \ub9cc\ub4e4 \uc218 \uc788\uc74c"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"from airflow.operators.python_operator import BranchPython Operator"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"PythonOperator\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c ",(0,n.kt)("inlineCode",{parentName:"p"},"python_callable")," \uc778\uc790 \uc0ac\uc6a9"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\uc2e4\ud589\ud560 task_id\uc758 \uc774\ub984\uc744 \ubc18\ud658"),(0,n.kt)("li",{parentName:"ul"},"\ud568\uc218\uc5d0 \uc804\ub2ec\ub41c keword arguments\uc5d0 \ub300\ud55c \ucc38\uc870"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"example"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def branch_test(**kwargs):\n    if int(kwargs['ds_nodash']) % 2 == 0:\n        return 'even_day_task'\n    else:\n        return 'odd_day_task'\n\nbranch_task = BranchPythonOperator(\n                  task_id='branch_task',\n                  dag=dag,\n                  provide_context=True, # \ud568\uc218\uc5d0 \ub300\ud55c runtime \ubcc0\uc218\uc640 \ub9e4\ud06c\ub85c\uc5d0 \ub300\ud55c \uc5d1\uc138\uc2a4\ub97c \uc81c\uacf5\ud558\ub3c4\ub85d Airflow\uc5d0 \uc9c0\uc2dc\ud558\ub294 \uc694\uc18c\n                  # Airflow 2.0\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8 \ub418\uba74\uc11c \uc5c6\uc5b4\uc9d0\n                  python_callable=branch_test)\n\n# Define the dependencies\nstart_task >> branch_task >> even_day_task >> even_day_task2\nbranch_task >> odd_day_task >> odd_day_task2  \n")))))}u.isMDXComponent=!0},3423:(e,a,t)=>{t.d(a,{Z:()=>l});const l=t.p+"assets/images/multiple-dependencies-a56465a34e7623f3738b7b84cfb5da4d.jpg"},8712:(e,a,t)=>{t.d(a,{Z:()=>l});const l=t.p+"assets/images/scheduler-error-5472ccbf3ba61d2887682a3823de445b.jpg"},7371:(e,a,t)=>{t.d(a,{Z:()=>l});const l=t.p+"assets/images/task-dependency-after-067d505100b908d79918e77b1fa8527d.jpg"},5984:(e,a,t)=>{t.d(a,{Z:()=>l});const l=t.p+"assets/images/task-dependency-before-13d39d5488cc3ba99af810a79d1b4733.jpg"}}]);