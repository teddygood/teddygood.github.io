"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[1237],{3905:(e,a,t)=>{t.d(a,{Zo:()=>o,kt:()=>N});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=n.createContext({}),m=function(e){var a=n.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},o=function(e){var a=m(e.components);return n.createElement(u.Provider,{value:a},e.children)},s={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},k=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),k=m(t),N=l,c=k["".concat(u,".").concat(N)]||k[N]||s[N]||r;return t?n.createElement(c,i(i({ref:a},o),{},{components:t})):n.createElement(c,i({ref:a},o))}));function N(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=k;var p={};for(var u in a)hasOwnProperty.call(a,u)&&(p[u]=a[u]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var m=2;m<r;m++)i[m]=t[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}k.displayName="MDXCreateElement"},7498:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var n=t(7462),l=(t(7294),t(3905));const r={title:"Data Engineering \uc2a4\ud130\ub514 24\uc8fc\ucc28",date:"2022-02-02",draft:!1,description:"PseudoLab Data Science Fellowship 1\uae30",sidebar_position:1},i="Introduction to Scala",p={unversionedId:"Group-Study/data-engineering/data-engineer-with-python-week-24",id:"Group-Study/data-engineering/data-engineer-with-python-week-24",title:"Data Engineering \uc2a4\ud130\ub514 24\uc8fc\ucc28",description:"PseudoLab Data Science Fellowship 1\uae30",source:"@site/docs/Group-Study/data-engineering/data-engineer-with-python-week-24.md",sourceDirName:"Group-Study/data-engineering",slug:"/Group-Study/data-engineering/data-engineer-with-python-week-24",permalink:"/docs/Group-Study/data-engineering/data-engineer-with-python-week-24",draft:!1,editUrl:"https://github.com/teddygood/teddygood.github.io/docs/Group-Study/data-engineering/data-engineer-with-python-week-24.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Data Engineering \uc2a4\ud130\ub514 24\uc8fc\ucc28",date:"2022-02-02",draft:!1,description:"PseudoLab Data Science Fellowship 1\uae30",sidebar_position:1},sidebar:"sidebar",previous:{title:"Data Engineering \uc2a4\ud130\ub514 22\uc8fc\ucc28",permalink:"/docs/Group-Study/data-engineering/data-engineer-with-python-week-22"},next:{title:"Java",permalink:"/docs/Group-Study/java/"}},u={},m=[{value:"A Scalable Language",id:"a-scalable-language",level:2},{value:"Scala",id:"scala",level:3},{value:"Scala value types",id:"scala-value-types",level:3},{value:"static type and type inference",id:"static-type-and-type-inference",level:3},{value:"Workflows, Functions, Collections",id:"workflows-functions-collections",level:2},{value:"sbt",id:"sbt",level:3},{value:"almond",id:"almond",level:3},{value:"Function",id:"function",level:3},{value:"Array",id:"array",level:3},{value:"List",id:"list",level:3},{value:"Type Systems, Control Structures, Style",id:"type-systems-control-structures-style",level:2},{value:"Static type",id:"static-type",level:3},{value:"Scala \uc790\ub8cc\ud615 \uc0dd\ub7b5",id:"scala-\uc790\ub8cc\ud615-\uc0dd\ub7b5",level:3},{value:"If",id:"if",level:3},{value:"while",id:"while",level:3},{value:"foreach",id:"foreach",level:3},{value:"References",id:"references",level:2}],o={toc:m};function s(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"introduction-to-scala"},"Introduction to Scala"),(0,l.kt)("h2",{id:"a-scalable-language"},"A Scalable Language"),(0,l.kt)("h3",{id:"scala"},"Scala"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\uc774\ud0c8\ub9ac\uc544\uc5b4\ub85c \uacc4\ub2e8\uc774\ub77c\ub294 \uc758\ubbf8"),(0,l.kt)("li",{parentName:"ul"},"EPFL\uc758 CS building\uc758 \ub098\uc120\ud615 \uacc4\ub2e8\uc5d0\uc11c \uc601\uac10\uc744 \ubc1b\uc74c"),(0,l.kt)("li",{parentName:"ul"},"\uc0c8\ub86d\uace0 \uac1c\uc120\ub41c Java"),(0,l.kt)("li",{parentName:"ul"},"general-purpose programming language"),(0,l.kt)("li",{parentName:"ul"},"JVM(Java Virtual Machine)\uc5d0\uc11c \uc2e4\ud589\ub428",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Java \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c(\uc77c\ubd80 \uc608\uc678\uac00 \uc788\uc74c)"))),(0,l.kt)("li",{parentName:"ul"},"Scalable language",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\uc791\uc740 \uaddc\ubaa8\uc758 \uc2a4\ud06c\ub9bd\ud2b8 \uc791\uc131\ubd80\ud130 data processing, distributed computing\uc744 \uc704\ud55c \ub300\uaddc\ubaa8 \uc2dc\uc2a4\ud15c \uad6c\ucd95 \ub4f1 \uc0ac\uc6a9\uc790\uac00 \ud544\uc694\uc5d0 \ub530\ub77c \ub2e4\uc591\ud558\uac8c \ud655\uc7a5\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc124\uacc4\ub428"))),(0,l.kt)("li",{parentName:"ul"},"OOP, functional programming",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Scala\uc5d0\uc11c\ub294 \uac70\uc758 \ubaa8\ub4e0 \uac83\uc774 object",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ud655\uc7a5\uc131"))),(0,l.kt)("li",{parentName:"ul"},"\ud568\uc218\ub294 \uc815\uc218\ub098 \ubb38\uc790\uc5f4\ucc98\ub7fc first-class value",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ud568\uc218\ub3c4 \ub2e4\ub978 \uac12\ucc98\ub7fc \ubcc0\uc218\uc5d0 \ub2f4\uae30\uace0, \uc778\uc790\ub85c \ub118\uc5b4\uac00\uae30\ub3c4 \ud558\uba70, \uac12\uc73c\ub85c \ubc18\ud658\ub420 \uc218 \uc788\uc74c"))),(0,l.kt)("li",{parentName:"ul"},"\ud504\ub85c\uadf8\ub7a8\uc758 operation\uc740 \ub370\uc774\ud130\ub97c \uc81c\uc790\ub9ac\uc5d0\uc11c \ubcc0\uacbd\ud558\ub294 \uac83\ubcf4\ub2e4 \uc785\ub825 \uac12\uc744 \ucd9c\ub825 \uac12\uc5d0 mapping\ud574\uc57c \ud568 -> \ud568\uc218\uc5d0 side effect\uac00 \uc5c6\uc5b4\uc57c \ud568"))),(0,l.kt)("li",{parentName:"ul"},"Scala\ub294 Java\uc758 \ub2e8\uc810\ub4e4\uc744 \uadf9\ubcf5\ud558\uae30 \uc704\ud574 \uc81c\uc791\ub428",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Java\uc758 \ucf54\ub4dc\ubcf4\ub2e4 \ub354 \uc9e7\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c"))),(0,l.kt)("li",{parentName:"ul"},"high-level language",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ub354 \uc9e7\uace0 \uc774\ud574\ud558\uae30 \uc26c\uc6cc\uc9d0")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"// Calculate the difference between 8 and 5\nval difference = 8 - 5\n\n// Print the difference\nprintln(difference)\n")),(0,l.kt)("h3",{id:"scala-value-types"},"Scala value types"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"val"),": immutable")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"var"),": mutable")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Double"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Scala\uc758 default floating point value type"),(0,l.kt)("li",{parentName:"ul"},"Float\ubcf4\ub2e4 \uc815\ud655"),(0,l.kt)("li",{parentName:"ul"},"\uc18c\uc218\uc810 \uc774\ud558 15\uc790\ub9ac"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Float"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\uc18c\uc218\uc810 \uc774\ud558 7\uc790\ub9ac"),(0,l.kt)("li",{parentName:"ul"},"\ub05d\uc5d0 ",(0,l.kt)("inlineCode",{parentName:"li"},"f"),"\ub97c \ucd94\uac00\ud558\uc5ec \uc800\uc7a5"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Int")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Short")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Byte")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Char")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Boolean")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Unit")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"String")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"java.lang.String\uc744 \uadf8\ub0e5 String\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uac83\ucc98\ub7fc scala.Int\ub3c4 Int\ub85c \uc0ac\uc6a9"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"scala String\uc740 java.lang.String\uc744 \uc0ac\uc6a9")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'val twoClubs: Int = 2\nval playerA: String = "Alex"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'twoClubs: Int = 2\nplayerA: String = "Alex"\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\uc2a4\uce7c\ub77c\uc5d0\uc11c\ub294 \uac00\ub2a5\ud558\uba74 ",(0,l.kt)("inlineCode",{parentName:"li"},"var")," \ubcf4\ub2e4 ",(0,l.kt)("inlineCode",{parentName:"li"},"val"),"\uc744 \ub354 \uc120\ud638",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ud504\ub85c\uadf8\ub7a8\uc758 \ub85c\uc9c1 \uc624\ub958\ub85c \uc778\ud574 \ub370\uc774\ud130\uac00 \uc2e4\uc218\ub85c \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc74c"),(0,l.kt)("li",{parentName:"ul"},"\ub370\uc774\ud130\uac00 \ubcc0\uacbd\ub420 \uc218 \uc788\ub294 \uacf3\uc5d0\uc11c \ubcc0\uacbd\ub418\uc9c0 \uc54a\uc73c\ub2c8 \ucf54\ub4dc\ub97c \uc0dd\uac01\ud558\uae30 \ub354 \uc26c\uc6c0"),(0,l.kt)("li",{parentName:"ul"},"\ubd88\ubcc0\uc774\uae30 \ub54c\ubb38\uc5d0 \ud504\ub85c\uadf8\ub7a8\uc774 \uc608\uc0c1\ub300\ub85c \uc791\ub3d9\ud558\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uc720\ub2db \ud14c\uc2a4\ud2b8\ub97c \ub354 \uc801\uac8c \ud560 \uc218 \uc788\uc74c"),(0,l.kt)("li",{parentName:"ul"},"\ub2e8\uc810",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\uac1d\uccb4\uc758 \ubcf5\uc0ac\uc5d0 \uc758\ud574 \uba54\ubaa8\ub9ac\uac00 \ucd94\uac00 \uc0dd\uc131")))))),(0,l.kt)("h3",{id:"static-type-and-type-inference"},"static type and type inference"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Scala\ub294 \uc815\uc801 \ud0c0\uc785 \uc5b8\uc5b4"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ucef4\ud30c\uc77c \uc2dc\uc5d0 \ubcc0\uc218\uc758 \ud0c0\uc785\uc774 \uacb0\uc815"),(0,l.kt)("li",{parentName:"ul"},"C/C++, Java \ub4f1 "))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\ub3d9\uc801 \ud0c0\uc785 \uc5b8\uc5b4\ub294 \ub7f0\ud0c0\uc784 \ub54c \uacb0\uc815"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\uc989, \ucf54\ub4dc \uc2e4\ud589 \uc911\uc5d0 \uc790\ub8cc\ud615\uc774 \uacb0\uc815"),(0,l.kt)("li",{parentName:"ul"},"\ud30c\uc774\uc36c, \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8, \ub8e8\ube44 \ub4f1"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\uc790\ub3d9\uc73c\ub85c \ud0c0\uc785 \uc720\ucd94"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'var num1: Int = 12 // \ud0c0\uc785 \uba85\uc2dc\n// num: Int = 12\nvar num2 = 12 // \ud0c0\uc785 \ucd94\ub860 \uc0ac\uc6a9\n// num2: Int = 12\nvar str = "Hello, world!" // \ud0c0\uc785 \ucd94\ub860\ud568\n// str: java.lang.String = "Hello, world!"\n')))),(0,l.kt)("h2",{id:"workflows-functions-collections"},"Workflows, Functions, Collections"),(0,l.kt)("h3",{id:"sbt"},"sbt"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\uc2a4\uce7c\ub77c\ub85c \uc791\uc131\ub418\uc5c8\uc73c\uba70, \uc2a4\uce7c\ub77c\uc5d0 \uc0ac\uc6a9\ud558\uae30 \ud3b8\ud55c \uae30\ub2a5\uc744 \ub9ce\uc774 \uc81c\uacf5"),(0,l.kt)("li",{parentName:"ul"},"\uc778\ud154\ub9ac\uc81c\uc774\uc5d0\uc11c \uc0ac\uc6a9 \ud50c\ub7ec\uadf8\uc778\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5")),(0,l.kt)("h3",{id:"almond"},"almond"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Jupyter Notebook\uc5d0\uc11c Scala \uc2e4\ud589",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ub370\uc774\ud130 \uc2dc\uac01\ud654"),(0,l.kt)("li",{parentName:"ul"},"Spark\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \ubd84\uc11d")))),(0,l.kt)("h3",{id:"function"},"Function"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\ud568\uc218\ub97c \uc120\uc5b8\ud560 \ub54c ",(0,l.kt)("inlineCode",{parentName:"li"},"return")," \uc0dd\ub7b5 \uac00\ub2a5",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ucef4\ud30c\uc77c\ub7ec\uac00 \ubc18\ud658\uac12\uc744 \uc774\uc6a9\ud558\uc5ec \uc790\ub3d9 \ucd94\ub860"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"return"),"\uc774 \uc0dd\ub7b5\ub418\uace0 return type\uc774 ",(0,l.kt)("inlineCode",{parentName:"li"},"Unit"),"\uc774 \uc544\ub2c8\uba74 \ud568\uc218\uc758 \ub9c8\uc9c0\ub9c9 \uac12\uc744 \ubc18\ud658"))),(0,l.kt)("li",{parentName:"ul"},"parameter type\uc740 \uc0dd\ub7b5 \ubd88\uac00"),(0,l.kt)("li",{parentName:"ul"},"return \uac12\uc774 \uc5c6\ub294 \ud568\uc218\ub97c \uc120\uc5b8\ud560 \ub54c\ub294 ",(0,l.kt)("inlineCode",{parentName:"li"},"Unit")," \uc0ac\uc6a9"),(0,l.kt)("li",{parentName:"ul"},"\ud568\uc218\uc758 parameter\ub294 immutable\uc774\uae30 \ub54c\ubb38\uc5d0 \uc7ac\ud560\ub2f9 \ubd88\uac00"),(0,l.kt)("li",{parentName:"ul"},"first-class value",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ubaa8\ub4e0 \ud568\uc218\ub294 \uacb0\uacfc\ub97c \uc0dd\uc131\ud558\uace0 \uac12\uc774 \uc788\uc73c\uba70, \ubaa8\ub4e0 \uac12\uc5d0\ub294 type\uc774 \uc788\uc74c")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"// \ud568\uc218 \uc120\uc5b8 \ndef add(x: Int, y: Int): Int = {\n  return x + y\n}\n\n// x\ub294 val \uc774\uae30 \ub54c\ubb38\uc5d0 \ubcc0\uacbd \ubd88\uac00 \ndef add(x: Int): Int = {\n  x = 10 \n}\n\n// \ub9ac\ud134 \ud0c0\uc785 \uc0dd\ub7b5 \uac00\ub2a5 \ndef add(x: Int, y: Double) = {\n  x + y\n}\n\n// \ub9ac\ud134 \ud0c0\uc785\uc774 Unit \ud0c0\uc785\ub3c4 \uc0dd\ub7b5 \uac00\ub2a5 \ndef add(x: Int, y: Int) = {\n  println(x + y)\n}\n\n// \ub9ac\ud134 \ub370\uc774\ud130\uac00 \uc5c6\ub294 \uacbd\uc6b0 Unit\uc744 \uc120\uc5b8  \ndef add(x: Int, y: Int): Unit = {\n  println(x + y)\n}\n")),(0,l.kt)("h3",{id:"array"},"Array"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Collection",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"mutable: \uc6d0\ub798 \uac12 \uc5c6\ub370\uc774\ud2b8"),(0,l.kt)("li",{parentName:"ul"},"immutable: \uc6d0\ub798 \uac12\uc740 \ubcc0\ud558\uc9c0 \uc54a\uc74c",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ucd94\uac00, \uc81c\uac70 \ub610\ub294 \uc5c5\ub370\uc774\ud2b8 \ub4f1\uc758 \uc791\uc5c5"))))),(0,l.kt)("li",{parentName:"ul"},"Array",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"mutable"),(0,l.kt)("li",{parentName:"ul"},"parameterize",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'val players = new Array[String](3)\nval players: Array[String] = new Array[String](3) // \uba85\uc2dc\uc801\uc73c\ub85c \ud0c0\uc785 \uc120\uc5b8\nval players = Array("Alex", "Chen", "Marta")\nplayers(0) = "Hello"\nplayers(1) = ", "\nplayers(2) = "world!\\n"\n')),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"3\uc774\ub77c\ub294 \uac12\uc73c\ub85c parameterize\ud558\uc5ec \ubc30\uc5f4 \uae38\uc774 \ucd08\uae30\ud654"),(0,l.kt)("li",{parentName:"ul"},"players \ubc30\uc5f4\uc758 type\uc740 ",(0,l.kt)("inlineCode",{parentName:"li"},"Array[String](3)"),"\uc774 \uc544\ub2c8\ub77c ",(0,l.kt)("inlineCode",{parentName:"li"},"Array[String]"))))),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'val players = Array("Alex", "Chen", "Marta")\nplayers(0) = "Sindhu"\n')),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"val"),"\ub85c \uc120\uc5b8\ud55c \ubcc0\uc218\ub294 \uc7ac\ud560\ub2f9 \ubd88\uac00"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"val"),"\uc744 \uc0ac\uc6a9\ud558\ub294 \uac1d\uccb4\uac00 mutable\uc774\uba74 \ud574\ub2f9 \uac1d\uccb4\ub294 \ubcc0\uacbd \uac00\ub2a5 "),(0,l.kt)("li",{parentName:"ul"},"\ub3d9\uc77c\ud55c type\uc758 \uac12\uc73c\ub85c\ub9cc \ubc30\uc5f4\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc74c"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"val"),"\uc774 \uc544\ub2cc ",(0,l.kt)("inlineCode",{parentName:"li"},"var"),"\ub85c \ubc30\uc5f4 \uc120\uc5b8\ud588\uc744 \ub54c \ubc30\uc5f4\uc744 \uc7ac\ud560\ub2f9\ud560 \uc218 \uc788\uc5b4\uc11c \ubc30\uc5f4\uc774 \ucd08\uae30\ud654 \ub420 \uc218 \uc788\uc74c",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'var players = Array("Alex", "Chen", "Marta")\nplayers(0) = "Sindhu"\nplayers = new Array[String](5) \nplayers // players: Array[String] = Array(null, null, null, null, null)\n'))),(0,l.kt)("li",{parentName:"ul"},"\ubc30\uc5f4 \ud0c0\uc785\uc744 ",(0,l.kt)("inlineCode",{parentName:"li"},"Any"),"\ub85c parameterize\ud558\uba74 \uac01\uac01 \ub2e4\ub978 type\uc774 \ub4e4\uc5b4\uac08 \uc218 \uc788\uc74c")))),(0,l.kt)("h3",{id:"list"},"List"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"List",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"immutable ")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'val players = List("Alex", "Chen", "Marta")\n')),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\uba54\uc18c\ub4dc \uc0ac\uc6a9 \uac00\ub2a5",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\uba54\uc18c\ub4dc\ub97c \ud638\ucd9c\ud558\uba74 \uc0c8\ub85c\uc6b4 \uac12\uc774 \uc788\ub294 \uc0c8\ub85c\uc6b4 list\uac00 \ubc18\ud658\ub428"),(0,l.kt)("li",{parentName:"ul"},"\uc790\uc138\ud55c \uac83\uc740 \uacf5\uc2dd \ubb38\uc11c \ucc38\uace0"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cons(::)"),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uc791 \ubd80\ubd84\uc5d0 \uc0c8 \uc694\uc18c \ucd94\uac00",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Scala\uc5d0 append \uc5f0\uc0b0\uc774 \uc788\uc9c0\ub9cc \ud6a8\uc728\uc801\uc774\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uac70\uc758 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc74c")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'val newPlayers = "Sindhu" :: players // newPlayers: List[String] = List(Sindhu, Alex, Chen, Marta)\n')),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"var"),"\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'var players = List("Alex", "Chen", "Marta")\\\nplayers = "Sindhu" :: players // players: List[String] = List(Sindhu, Alex, Chen, Marta)\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Nil"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ube48 \ub9ac\uc2a4\ud2b8")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Nil // res0: scala.collection.immutable.Nil.type = List()\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Nil"),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucd08\uae30\ud654",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Nil"),"\uc774 \uc5c6\uc73c\uba74 \uc5d0\ub7ec \ubc1c\uc0dd")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'val players = "Alex" :: "Chen" :: "Marta" :: Nil\n'))))),(0,l.kt)("li",{parentName:"ul"},"concatenating list",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},":::"),"\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9ac\uc2a4\ud2b8 \uc5f0\uacb0")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'val playersA = List("Sindhu", "Alex")\nval playersB = List("Chen", "Marta")\nval allPlayers = playersA ::: playersB\nprintln(playersA + " and " + playersB + " were not mutated,")\nprintln("which means " + allPlayers + " is a new List.")\n/* List(Sindhu, Alex) and List(Chen, Marta) were not mutated,\nwhich means List(Sindhu, Alex, Chen, Marta) is a new List. */\n')))))),(0,l.kt)("h2",{id:"type-systems-control-structures-style"},"Type Systems, Control Structures, Style"),(0,l.kt)("h3",{id:"static-type"},"Static type"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\uc7a5\uc810"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ub7f0\ud0c0\uc784 \ub54c type\uc744 \ucd94\ub860\ud560 \ud544\uc694\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uc2e4\ud589\uc774 \ub354 \ube60\ub984"),(0,l.kt)("li",{parentName:"ul"},"\ud0c0\uc785 \uc5d0\ub7ec\ub97c \ucef4\ud30c\uc77c \uc2dc \ubc1c\uacac\ud560 \uc218 \uc788\uc5b4 \uc548\uc815\uc131\uc774 \ub192\uc74c"),(0,l.kt)("li",{parentName:"ul"},"refactoring\uc744 \ud560 \ub54c \uc548\uc804\ud558\uac8c \ud560 \uc218 \uc788\uc74c"),(0,l.kt)("li",{parentName:"ul"},"\ubb38\uc11c\ud654"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\ub2e8\uc810 "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\ucef4\ud30c\uc77c\ub7ec\uac00 \ud0c0\uc785\uc744 \ud655\uc778\ud558\ub294 \ub370 \uc2dc\uac04\uc774 \uac78\ub9bc"),(0,l.kt)("li",{parentName:"ul"},"\ucf54\ub529\ud558\uae30 \uc5b4\ub824\uc6c0"),(0,l.kt)("li",{parentName:"ul"},"\ud504\ub85c\uadf8\ub798\uba38\uac00 \uc6d0\ud558\ub294 \ub300\ub85c \ud45c\ud604\ud558\uae30 \uc5b4\ub824\uc6c0")))),(0,l.kt)("h3",{id:"scala-\uc790\ub8cc\ud615-\uc0dd\ub7b5"},"Scala \uc790\ub8cc\ud615 \uc0dd\ub7b5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val fourHearts: Int = 4\nval fourHearts = 4\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"fourHearts: Int = 4\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'val players: Array[String] = Array("Alex", "Chen", "Marta")\nval players = Array("Alex", "Chen", "Marta")\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"players: Array[String] = Array(Alex, Chen, Marta)\n")),(0,l.kt)("h3",{id:"if"},"If"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\ub0b4\uc6a9\uc774 \ub2e8 \ud55c \uc904\uc774\uc5b4\ub3c4 \uc911\uad04\ud638 \uc0ac\uc6a9")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"else\uac00 \uc788\uc73c\uba74 \uc911\uad04\ud638 \uc0ad\uc81c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"else if\ub3c4 \uc0ac\uc6a9 \uac00\ub2a5 ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"if\ub294 \ud45c\ud604\uc2dd\uc774\uae30 \ub54c\ubb38\uc5d0 \uc778\ud130\ud504\ub9ac\ud130\uc5d0 \ub3cc\ub9ac\uba74 \ubb34\uc870\uac74 \uac12\uc774 \ucd9c\ub825\ub428"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'// This hand\'s point value\nval hand = 24\n\n// If this hand busts, print to output\nif (hand > 21) {\n  println("This hand busts!")\n}\n')),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"// Point values for two competing hands\nval handA = 17\nval handB = 19\n\n// Print the value of the hand with the most points\nif (handA > handB)\n  println(handA)\nelse\n  println(handB)\n")))),(0,l.kt)("h3",{id:"while"},"while"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\uc870\uac74\uc744 \ud45c\ud604\ud560 \ub54c ",(0,l.kt)("inlineCode",{parentName:"li"},"()")," \uc0ac\uc6a9")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'// Define counter variable\nvar i = 0\n\n// Define the number of times for the cheer to repeat\nval numRepetitions = 3\n\n// Loop to repeat the cheer\nwhile (i < numRepetitions) {\n  println("Hip hip hooray!")\n  i += 1 // ++i and i++ don\'t work!\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"// Define counter variable\nvar i = 0\n\n// Create an array with each player's hand\nvar hands = Array(17, 24, 21)\n\n// Loop through hands and see if each busts\nwhile (i < hands.length) {\n  println(bust(hands(i))) // bust\ub294 \ud2b9\ubcc4\ud55c \ud568\uc218\uac00 \uc544\ub2c8\ub77c \uac15\uc758\uc5d0\uc11c \uc815\uc758\ud55c \uc784\uc758\uc758 \ud568\uc218\n  i = i + 1\n}\n")),(0,l.kt)("h3",{id:"foreach"},"foreach"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"foreach"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"()")," \ub0b4\uc758 \ubb38\uc7a5\uc744 \uc218\ud589"),(0,l.kt)("li",{parentName:"ul"},"\uc0ac\uc774\ub4dc\uc774\ud399\ud2b8\ub97c \uc77c\uc73c\ud0a4\ub294 \uc791\uc5c5\uc774\ub098, \ub9ac\uc2a4\ud2b8 \uc678\ubd80\uc758 \ubcc0\uc218\uc5d0 \uc811\uadfc\ud558\ub294 \uc791\uc5c5\uc774 \uc218\ud589\ub418\uae30\ub3c4 \ud568"),(0,l.kt)("li",{parentName:"ul"},"\uc0ac\uc6a9\ud558\uba74 \ub354\uc6b1 functional \ud574\uc9d0")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"// Define a function to determine if hand busts\ndef bust(hand: Int) = {\n  println(hand > 21)\n}\n\n// Initialize array with each player's hand\nvar hands = Array(17, 24, 21)\n\n// See if each hand busts\nhands.foreach(bust)\n")))),(0,l.kt)("h2",{id:"references"},"References"),(0,l.kt)("blockquote",null,(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://blog.outsider.ne.kr/478"},"\uc2a4\uce7c\ub77c\uc758 Type\uc5d0 \ub300\ud574\uc11c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://wikidocs.net/book/2350"},"\ube45\ub370\uc774\ud130 - \uc2a4\uce7c\ub77c(scala), \uc2a4\ud30c\ud06c(spark)\ub85c \uc2dc\uc791\ud558\uae30")))))}s.isMDXComponent=!0}}]);