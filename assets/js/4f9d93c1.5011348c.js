"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[9726],{4325:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=t(4848),i=t(8453);const r={title:"LeetCode 27",date:"2024-09-21",draft:!1},l=void 0,o={id:"Algorithm/LeetCode-27",title:"LeetCode 27",description:"27. Remove Element",source:"@site/wiki/Algorithm/LeetCode-27.md",sourceDirName:"Algorithm",slug:"/Algorithm/LeetCode-27",permalink:"/wiki/Algorithm/LeetCode-27",draft:!1,unlisted:!1,editUrl:"https://github.com/teddygood/teddygood.github.io/tree/main/wiki/Algorithm/LeetCode-27.md",tags:[],version:"current",frontMatter:{title:"LeetCode 27",date:"2024-09-21",draft:!1},sidebar:"sidebar",previous:{title:"LeetCode 26",permalink:"/wiki/Algorithm/LeetCode-26"},next:{title:"LeetCode 88",permalink:"/wiki/Algorithm/LeetCode-88"}},a={},c=[{value:"27. Remove Element",id:"27-remove-element",level:2},{value:"Problem Description",id:"problem-description",level:3},{value:"Custom Judge:",id:"custom-judge",level:3},{value:"Example",id:"example",level:3},{value:"Solution",id:"solution",level:2}];function d(e){const n={annotation:"annotation",blockquote:"blockquote",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"27-remove-element",children:"27. Remove Element"}),"\n",(0,s.jsx)(n.h3,{id:"problem-description",children:"Problem Description"}),"\n",(0,s.jsxs)(n.p,{children:["Given an integer array ",(0,s.jsx)(n.code,{children:"nums"})," and an integer ",(0,s.jsx)(n.code,{children:"val"}),", remove all occurrences of ",(0,s.jsx)(n.code,{children:"val"})," in ",(0,s.jsx)(n.code,{children:"nums"})," ",(0,s.jsx)(n.strong,{children:"in-place"}),". The order of the elements may be changed. Then return the ",(0,s.jsxs)(n.strong,{children:["number of elements in ",(0,s.jsx)(n.code,{children:"nums"})," which are not equal to ",(0,s.jsx)(n.code,{children:"val"})]}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Consider the number of elements in ",(0,s.jsx)(n.code,{children:"nums"})," which are not equal to ",(0,s.jsx)(n.code,{children:"val"})," to be ",(0,s.jsx)(n.code,{children:"k"}),". To get accepted, you need to do the following things:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Change the array ",(0,s.jsx)(n.code,{children:"nums"})," such that the first ",(0,s.jsx)(n.code,{children:"k"})," elements of ",(0,s.jsx)(n.code,{children:"nums"})," contain the elements which are not equal to ",(0,s.jsx)(n.code,{children:"val"}),". The remaining elements of ",(0,s.jsx)(n.code,{children:"nums"})," are not important as well as the size of ",(0,s.jsx)(n.code,{children:"nums"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Return ",(0,s.jsx)(n.code,{children:"k"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"custom-judge",children:"Custom Judge:"}),"\n",(0,s.jsx)(n.p,{children:"The judge will test your solution with the following code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"int[] nums = [...]; // Input array\nint val = ...; // Value to remove\nint[] expectedNums = [...]; // The expected answer with correct length.\n// It is sorted with no values equaling val.\n\nint k = removeElement(nums, val); // Calls your implementation\n\nassert k == expectedNums.length;\nsort(nums, 0, k); // Sort the first k elements of nums\nfor (int i = 0; i < actualLength; i++) {\n    assert nums[i] == expectedNums[i];\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Input:"})," nums = [3,2,2,3], val = 3",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Output:"})," 2, nums = [2,2,_,_]",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Explanation:"})," Your function should return k = 2, with the first two elements of nums being 2.",(0,s.jsx)(n.br,{}),"\n","It does not matter what you leave beyond the returned k (hence they are underscores)."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Input:"})," nums = [0,1,2,2,3,0,4,2], val = 2",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Output:"})," 5, nums = [0,1,3,0,4,_,_,_]",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Explanation:"})," Your function should return k = 5, with the first five elements of nums containing 0, 1, 3, 0, and 4.",(0,s.jsx)(n.br,{}),"\n","It does not matter what you leave beyond the returned k (hence they are underscores)."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"0 <= nums.length <= 100"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"0 <= nums[i] <= 50"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"0 <= val <= 100"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        # Initialize a pointer to track the index for non-val elements \n        i = 0\n\n        # Iterate through the array\n        for j in range(len(nums)):\n            # If the current element is not equal to val\n            if nums[j] != val:\n                # Place the element at the i-th position\n                nums[i] = nums[j]\n                # Move the pointer i forward\n                i += 1\n        \n        # Return the length of the modified array\n        return i\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The time complexity is ",(0,s.jsxs)(n.span,{className:"katex",children:[(0,s.jsx)(n.span,{className:"katex-mathml",children:(0,s.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(n.semantics,{children:[(0,s.jsxs)(n.mrow,{children:[(0,s.jsx)(n.mi,{children:"O"}),(0,s.jsx)(n.mo,{stretchy:"false",children:"("}),(0,s.jsx)(n.mi,{children:"n"}),(0,s.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,s.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(n.span,{className:"base",children:[(0,s.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,s.jsx)(n.span,{className:"mopen",children:"("}),(0,s.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(n.span,{className:"mclose",children:")"})]})})]})," because it iterates through the length of the array. Since the operation is performed in-place, no additional space is required. Therefore, the space complexity is ",(0,s.jsxs)(n.span,{className:"katex",children:[(0,s.jsx)(n.span,{className:"katex-mathml",children:(0,s.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(n.semantics,{children:[(0,s.jsxs)(n.mrow,{children:[(0,s.jsx)(n.mi,{children:"O"}),(0,s.jsx)(n.mo,{stretchy:"false",children:"("}),(0,s.jsx)(n.mn,{children:"1"}),(0,s.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,s.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(n.span,{className:"base",children:[(0,s.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,s.jsx)(n.span,{className:"mopen",children:"("}),(0,s.jsx)(n.span,{className:"mord",children:"1"}),(0,s.jsx)(n.span,{className:"mclose",children:")"})]})})]}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);