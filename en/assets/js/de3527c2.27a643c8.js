"use strict";(globalThis.webpackChunkmy_blog=globalThis.webpackChunkmy_blog||[]).push([[6640],{8881:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Algorithm/LeetCode-13","title":"LeetCode 13","description":"13. Roman to Integer","source":"@site/wiki/Algorithm/LeetCode-13.md","sourceDirName":"Algorithm","slug":"/Algorithm/LeetCode-13","permalink":"/en/wiki/Algorithm/LeetCode-13","draft":false,"unlisted":false,"editUrl":"https://github.com/teddygood/teddygood.github.io/tree/main/wiki/Algorithm/LeetCode-13.md","tags":[],"version":"current","frontMatter":{"title":"LeetCode 13","date":"2024-11-03"},"sidebar":"sidebar","previous":{"title":"LeetCode 121","permalink":"/en/wiki/Algorithm/LeetCode-121"},"next":{"title":"LeetCode 169","permalink":"/en/wiki/Algorithm/LeetCode-169"}}');var t=i(74848),s=i(28453);const o={title:"LeetCode 13",date:"2024-11-03"},l=void 0,d={},c=[{value:"13. Roman to Integer",id:"13-roman-to-integer",level:2},{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2},{value:"Time and Space Complexity",id:"time-and-space-complexity",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"13-roman-to-integer",children:(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/roman-to-integer/description/",children:"13. Roman to Integer"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"Clicking the heading will take you to the LeetCode problem."})}),"\n",(0,t.jsx)(n.h2,{id:"problem",children:"Problem"}),"\n",(0,t.jsxs)(n.p,{children:["Roman numerals are represented by seven different symbols:\xa0",(0,t.jsx)(n.code,{children:"I"}),",\xa0",(0,t.jsx)(n.code,{children:"V"}),",\xa0",(0,t.jsx)(n.code,{children:"X"}),",\xa0",(0,t.jsx)(n.code,{children:"L"}),",\xa0",(0,t.jsx)(n.code,{children:"C"}),",\xa0",(0,t.jsx)(n.code,{children:"D"}),"\xa0and\xa0",(0,t.jsx)(n.code,{children:"M"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Symbol"}),"       ",(0,t.jsx)(n.strong,{children:"Value"}),"\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000"]}),"\n",(0,t.jsxs)(n.p,{children:["For example,\xa0",(0,t.jsx)(n.code,{children:"2"}),"\xa0is written as\xa0",(0,t.jsx)(n.code,{children:"II"}),"\xa0in Roman numeral, just two ones added together.\xa0",(0,t.jsx)(n.code,{children:"12"}),"\xa0is written as\xa0",(0,t.jsx)(n.code,{children:"XII"}),", which is simply\xa0",(0,t.jsx)(n.code,{children:"X + II"}),". The number\xa0",(0,t.jsx)(n.code,{children:"27"}),"\xa0is written as\xa0",(0,t.jsx)(n.code,{children:"XXVII"}),", which is\xa0",(0,t.jsx)(n.code,{children:"XX + V + II"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not\xa0",(0,t.jsx)(n.code,{children:"IIII"}),". Instead, the number four is written as\xa0",(0,t.jsx)(n.code,{children:"IV"}),". Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as\xa0",(0,t.jsx)(n.code,{children:"IX"}),". There are six instances where subtraction is used:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"I"}),"\xa0can be placed before\xa0",(0,t.jsx)(n.code,{children:"V"}),"\xa0(5) and\xa0",(0,t.jsx)(n.code,{children:"X"}),"\xa0(10) to make 4 and 9.\xa0"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"X"}),"\xa0can be placed before\xa0",(0,t.jsx)(n.code,{children:"L"}),"\xa0(50) and\xa0",(0,t.jsx)(n.code,{children:"C"}),"\xa0(100) to make 40 and 90.\xa0"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"C"}),"\xa0can be placed before\xa0",(0,t.jsx)(n.code,{children:"D"}),"\xa0(500) and\xa0",(0,t.jsx)(n.code,{children:"M"}),"\xa0(1000) to make 400 and 900."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Given a roman numeral, convert it to an integer."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'**Input:** s = "III"\n**Output:** 3\n**Explanation:** III = 3.\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'**Input:** s = "LVIII"\n**Output:** 58\n**Explanation:** L = 50, V= 5, III = 3.\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 3:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'**Input:** s = "MCMXCIV"\n**Output:** 1994\n**Explanation:** M = 1000, CM = 900, XC = 90 and IV = 4.\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 <= s.length <= 15"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"s"}),"\xa0contains only\xa0the characters\xa0",(0,t.jsx)(n.code,{children:"('I', 'V', 'X', 'L', 'C', 'D', 'M')"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["It is\xa0",(0,t.jsx)(n.strong,{children:"guaranteed"}),"\xa0that\xa0",(0,t.jsx)(n.code,{children:"s"}),"\xa0is a valid roman numeral in the range\xa0",(0,t.jsx)(n.code,{children:"[1, 3999]"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def romanToInt(self, s: str) -> int:\n        symbol_dict = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}\n        answer = 0\n        prev_value = 0\n\n        for c in reversed(s):\n            current_value = symbol_dict[c]\n            if current_value < prev_value:\n                answer -= current_value\n            else:\n                answer += current_value\n                prev_value = current_value\n        return answer\n"})}),"\n",(0,t.jsx)(n.h3,{id:"time-and-space-complexity",children:"Time and Space Complexity"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Time complexity"}),": ",(0,t.jsx)(n.code,{children:"O(n)"}),", where ",(0,t.jsx)(n.code,{children:"n"})," is the length of the input string"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Space complexity"}),": ",(0,t.jsx)(n.code,{children:"O(1)"})," since only a fixed-size dictionary and a few integer variables are used"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(96540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);